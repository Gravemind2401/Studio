<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:c="clr-namespace:Studio.Controls"
                    xmlns:u="clr-namespace:Studio.Utilities">

    <!--#region Icon Templates-->
    <ControlTemplate x:Key="Studio.ScrollArrowLeftGlyph">
        <Viewbox Width="17" Height="17">
            <Rectangle Width="17" Height="17">
                <Rectangle.Fill>
                    <VisualBrush Viewport="0,0,17,17" ViewportUnits="Absolute">
                        <VisualBrush.Visual>
                            <Image RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True">
                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M17,17L0,17 0,0 17,0z" />
                                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"
                                                                     Geometry="F1 M11,4 L11,14 L6,8.5z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>

    <ControlTemplate x:Key="Studio.ScrollArrowUpGlyph">
        <Viewbox Width="17" Height="17">
            <Rectangle Width="17" Height="17">
                <Rectangle.Fill>
                    <VisualBrush Viewport="0,0,17,17" ViewportUnits="Absolute">
                        <VisualBrush.Visual>
                            <Image RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True">
                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M17,17L0,17 0,0 17,0z" />
                                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"
                                                                     Geometry="F1 M4,11 L14,11 L8.5,6z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>

    <ControlTemplate x:Key="Studio.ScrollArrowRightGlyph">
        <Viewbox Width="17" Height="17">
            <Rectangle Width="17" Height="17">
                <Rectangle.Fill>
                    <VisualBrush Viewport="0,0,17,17" ViewportUnits="Absolute">
                        <VisualBrush.Visual>
                            <Image RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True">
                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M17,17L0,17 0,0 17,0z" />
                                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"
                                                                     Geometry="F1 M6,4 L6,14 L11,8.5z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>

    <ControlTemplate x:Key="Studio.ScrollArrowDownGlyph">
        <Viewbox Width="17" Height="17">
            <Rectangle Width="17" Height="17">
                <Rectangle.Fill>
                    <VisualBrush Viewport="0,0,17,17" ViewportUnits="Absolute">
                        <VisualBrush.Visual>
                            <Image RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True">
                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M17,17L0,17 0,0 17,0z" />
                                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"
                                                                     Geometry="F1 M4,6 L14,6 L8.5,11z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>

    <ControlTemplate x:Key="DragHandleTemplate" TargetType="Thumb">
        <Rectangle>
            <Rectangle.Fill>
                <VisualBrush TileMode="Tile"
                        Viewport="0,0,4,4" ViewportUnits="Absolute"
                        Viewbox="0,0,4,4" ViewboxUnits="Absolute">
                    <VisualBrush.Visual>
                        <Image RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Thumb}}"
                                                                 Geometry="M0,0 H1 V1 H0 Z M2,2 H3 V3 H2 Z" />
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Rectangle.Fill>
        </Rectangle>
    </ControlTemplate>

    <ControlTemplate x:Key="SearchAcceptGlyph">
        <Viewbox Width="16" Height="16">
            <Rectangle Width="16" Height="16">
                <Rectangle.Fill>
                    <DrawingBrush>
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <DrawingGroup.Children>
                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"
                                                     Geometry="F1M9.7625,2.96C8.2205,2.96 6.9585,4.01 6.6085,5.48 6.3975,6.39 6.5375,7.3 7.0985,8.07 7.3095,8.42 7.5895,8.7 7.9395,8.91 8.2905,9.12 8.6405,9.33 8.9915,9.4 9.2715,9.47 9.4825,9.47 9.7625,9.47 11.3045,9.47 12.5665,8.42 12.9175,6.95 13.1275,6.11 12.9875,5.2 12.5665,4.5 12.0755,3.8 11.3745,3.31 10.5335,3.1 10.2535,3.03 9.9725,2.96 9.7625,2.96 M2.5425,15C2.1215,15 1.7715,14.86 1.4905,14.58 1.1405,14.3 0.999499999999999,13.88 0.999499999999999,13.53 0.999499999999999,13.11 1.1405,12.76 1.4205,12.48L5.0655,8.77C4.5045,7.58 4.2945,6.25 4.6455,4.99 5.2055,2.68 7.3095,1 9.7625,1 10.1835,1 10.6035,1.07 11.0245,1.14 12.4265,1.49 13.5475,2.33 14.2485,3.52 14.9495,4.71 15.1605,6.11 14.8795,7.51 14.3195,9.89 12.2165,11.5 9.7625,11.5 9.3415,11.5 8.9215,11.43 8.5005,11.36 8.0805,11.22 7.6595,11.08 7.2385,10.87L3.5935,14.51C3.3135,14.86,2.8925,15,2.5425,15" />
                                </DrawingGroup.Children>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>

    <ControlTemplate x:Key="SearchClearGlyph">
        <Viewbox Width="16" Height="16">
            <Rectangle Width="16" Height="16">
                <Rectangle.Fill>
                    <DrawingBrush>
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <DrawingGroup.Children>
                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"
                                                     Geometry="F1M4,5L6,5 8,7 10,5 12,5 9,8 12,11 10,11 8,9 6,11 4,11 7,8z" />
                                </DrawingGroup.Children>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>

    <ControlTemplate x:Key="DocWellOverflowGlyph">
        <Canvas SnapsToDevicePixels="True"
                UseLayoutRounding="True"
                Width="12" Height="12">
            <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ButtonBase}}"
                  StrokeStartLineCap="Square" StrokeEndLineCap="Square"
                  Data="M2,6 L10,6 L6,10 Z" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="DocWellOverflowGlyph2">
        <Canvas SnapsToDevicePixels="True"
                UseLayoutRounding="True"
                Width="12" Height="12">
            <Path Canvas.Left="1" Canvas.Top="1" RenderOptions.EdgeMode="Aliased"
                  Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ButtonBase}}"
                  StrokeStartLineCap="Square" StrokeEndLineCap="Square"
                  Data="M2,2 L9,2 L9,3 L2,3 Z" />
            <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ButtonBase}}"
                  StrokeStartLineCap="Square" StrokeEndLineCap="Square"
                  Data="M2,6 L10,6 L6,10 Z" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="TabPinGlyph">
        <Canvas SnapsToDevicePixels="True"
                RenderOptions.EdgeMode="Aliased"
                Width="13" Height="13">
            <Grid Canvas.Left="0" Canvas.Top="0.5">
                <Path Stroke="Transparent" Data="M0,0 L13,13" />
                <Path Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                      StrokeStartLineCap="Square" StrokeEndLineCap="Square"
                      Data="M3,6 L6,6 M6,3 L6,9 M6,4 L10,4 L10,8 L6,8 L6,7 L10,7" />
            </Grid>
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="TabUnpinGlyph">
        <Canvas SnapsToDevicePixels="True"
                RenderOptions.EdgeMode="Aliased"
                Width="13" Height="13">
            <Grid Canvas.Left="0" Canvas.Top="0.5">
                <Path Stroke="Transparent" Data="M0,0 L13,13" />
                <Path Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                      StrokeStartLineCap="Square" StrokeEndLineCap="Square"
                      Data="M4,6 L10,6 M5,6 L5,2 L9,2 L9,6 L8,6 L8,2 M7,6 L7,9" />
            </Grid>
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="TabCloseGlyph">
        <Canvas SnapsToDevicePixels="False"
                Width="13" Height="13">
            <Grid Canvas.Left="0" Canvas.Top="0">
                <Path Stroke="Transparent" Data="M0,0 L13,13" />
                <Path Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                      StrokeStartLineCap="Square" StrokeEndLineCap="Square"
                      Data="M3,3 L10,10 M10,3 L3,10" />
            </Grid>
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="ToolPinGlyph">
        <Canvas SnapsToDevicePixels="True"
                RenderOptions.EdgeMode="Aliased"
                UseLayoutRounding="True"
                Width="13" Height="13">
            <Path Canvas.Left="1" Canvas.Top="1"
                  Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Control}}"
                  StrokeStartLineCap="Square" StrokeEndLineCap="Square"
                  Data="M4,7 L4,1 L8,1 L8,7 L7,7 L7,2 M3,7 L 9,7 M6,7 L6,11" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="ToolUnpinGlyph">
        <Canvas SnapsToDevicePixels="True"
                RenderOptions.EdgeMode="Aliased"
                UseLayoutRounding="True"
                Width="13" Height="13">
            <Path Canvas.Left="1" Canvas.Top="1"
                  Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Control}}"
                  StrokeStartLineCap="Square" StrokeEndLineCap="Square"
                  Data="M1,6 L5,6 M5,3 L5,9 M5,4 L11,4 L11,8 L5,8 L5,7 L11,7" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="ToolMenuGlyph">
        <Canvas SnapsToDevicePixels="True"
                UseLayoutRounding="True"
                Width="13" Height="13">
            <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
                  StrokeStartLineCap="Square" StrokeEndLineCap="Square"
                  Data="M2,4 L10,4 L6,8 Z" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="TreeViewItemCollapsedGlyph">
        <Canvas SnapsToDevicePixels="True"
                UseLayoutRounding="True"
                Width="11" Height="11">
            <Path Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                  Fill="{Binding Background, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                  Data="M3.5,0.5 L7.5,4.5 L3.5,8.5 Z" />
        </Canvas>
    </ControlTemplate>

    <ControlTemplate x:Key="TreeViewItemExpandedGlyph">
        <Canvas SnapsToDevicePixels="True"
                Width="11" Height="11">
            <Path Stroke="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                  Fill="{Binding Background, RelativeSource={RelativeSource AncestorType=ToggleButton}}"
                  Data="M8,8 L3.5,8 L8,3.5 Z" />
        </Canvas>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Common Templates-->
    <ControlTemplate x:Key="ButtonBaseTemplate" TargetType="ButtonBase">
        <Border BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding Content}"
                    TextBlock.Foreground="{TemplateBinding Foreground}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Standard Controls-->

    <Style x:Key="Studio.TextBoxStyle" TargetType="TextBox">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2,1" />

        <Setter Property="Foreground" Value="{DynamicResource CommonControls.TextBox.Text}" />
        <Setter Property="Background" Value="{DynamicResource CommonControls.TextBox.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.TextBox.Border}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer Panel.ZIndex="0" x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.TextBox.TextFocused}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.TextBox.BackgroundFocused}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.TextBox.BorderFocused}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.TextBox.TextDisabled}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.TextBox.BackgroundDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.TextBox.BorderDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Studio.ButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />

        <Setter Property="Foreground" Value="{DynamicResource CommonControls.Button.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource CommonControls.Button.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.Button.Border}" />

        <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />

        <Style.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.Button.DefaultForeground}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.Button.DefaultBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.Button.BorderDefault}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.Button.FocusedForeground}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.Button.FocusedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.Button.BorderFocused}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.Button.HoverForeground}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.Button.HoverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.Button.BorderHover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.Button.PressedForeground}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.Button.PressedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.Button.BorderPressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.Button.DisabledForeground}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.Button.DisabledBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.Button.BorderDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Studio.ComboBoxStyle" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Padding" Value="4,3,4,4" />

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource Environment.DropDown.Text}" />
        <Setter Property="Background" Value="{DynamicResource Environment.DropDown.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.DropDown.Border}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="1" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="3"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                        </Border>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                TextOptions.TextFormattingMode="Display">
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox"
                                 Margin="{TemplateBinding Padding}" Style="{x:Null}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 Focusable="True" Visibility="Hidden" Background="Transparent"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 TextBlock.Foreground="{TemplateBinding Foreground}"
                                 TextOptions.TextFormattingMode="Display">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <Border x:Name="Separator" Grid.Column="1" Width="1" Margin="0,1" Background="Transparent" />
                        <ToggleButton x:Name="ToggleButton" Grid.Column="2" Margin="0,1,1,1"
                                      Focusable="False" ClickMode="Press" Background="Transparent"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="{TemplateBinding Background}">
                                        <Path Margin="0,1,0,0" Fill="{TemplateBinding Foreground}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M0,0 L3,3 L6,0 Z" />
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <ToggleButton x:Name="ToggleOverlay" Grid.ColumnSpan="3" Panel.ZIndex="1"
                                      Focusable="False" ClickMode="Press" Background="Transparent"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="{TemplateBinding Background}" />
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Popup x:Name="Popup" Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" Focusable="False"
                               HorizontalOffset="1" VerticalOffset="-1">
                            <Border ClipToBounds="True" Padding="0,0,5,5">
                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            BorderThickness="1" Margin="0,0,2,0"
                                            Background="{DynamicResource Environment.DropDown.PopupBackground}"
                                            BorderBrush="{DynamicResource Environment.DropDown.PopupBorder}">
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.5" Direction="300" />
                                        </Border.Effect>
                                    </Border>
                                    <ScrollViewer SnapsToDevicePixels="True" Margin="3,1,5,1">
                                        <VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource Environment.DropDown.Glyph}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Separator" Property="Background" Value="{DynamicResource Environment.DropDown.ButtonMouseOverSeparator}" />
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource Environment.DropDown.MouseOverGlyph}" />
                            <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource Environment.DropDown.ButtonMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="Separator" Property="Background" Value="{DynamicResource Environment.DropDown.ButtonMouseDownSeparator}" />
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource Environment.DropDown.MouseDownGlyph}" />
                            <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource Environment.DropDown.ButtonMouseDownBackground}" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ToggleOverlay" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource Environment.DropDown.DisabledGlyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.DropDown.MouseOverText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.DropDown.MouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.DropDown.MouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.DropDown.MouseDownText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.DropDown.MouseDownBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.DropDown.MouseDownBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Environment.DropDown.DisabledText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.DropDown.DisabledBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.DropDown.DisabledBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Studio.ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="3,0" />

        <Setter Property="Foreground" Value="{DynamicResource Environment.ComboBox.ItemText}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}"
                                          TextOptions.TextFormattingMode="Display" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.ComboBox.ItemMouseOverText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ComboBox.ItemMouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ComboBox.ItemMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Environment.ComboBox.ItemTextInactive}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Studio.TreeViewStyle" TargetType="TreeView">
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource TreeView.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource TreeView.Background}" />
    </Style>

    <Style x:Key="Studio.TreeViewItemStyle" TargetType="TreeViewItem">
        <Style.Resources>
            <u:TreeViewItemMarginConverter x:Key="marginConverter" IndentWidth="18" />
            <Style x:Key="ExpanderToggleStyle" TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Padding" Value="4,5,4,3" />

                <!--unselected, collapsed-->
                <Setter Property="Foreground" Value="{DynamicResource TreeView.Glyph}" />
                <Setter Property="Background" Value="Transparent" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid Background="Transparent">
                                <ContentControl x:Name="content" Margin="{TemplateBinding Padding}" Focusable="False" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter TargetName="content" Property="Template" Value="{StaticResource TreeViewItemCollapsedGlyph}" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="content" Property="Template" Value="{StaticResource TreeViewItemExpandedGlyph}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!--unselected, expanded-->
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
                    </Trigger>

                    <!--unselected, hovered-->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource TreeView.GlyphMouseOver}" />
                    </Trigger>

                    <!--selected, active-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="True" />
                            <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource TreeView.SelectedItem.ActiveGlyph}" />
                    </MultiDataTrigger>

                    <!--selected, active, collapsed, hovered-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="True" />
                            <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="True" />
                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource TreeView.SelectedItem.ActiveGlyphMouseOver}" />
                        <Setter Property="Background" Value="{Binding Foreground, RelativeSource={RelativeSource Self}}" />
                    </MultiDataTrigger>

                    <!--selected, active, expanded, hovered-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="True" />
                            <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="True" />
                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource TreeView.SelectedItem.ActiveGlyphMouseOver}" />
                        <Setter Property="Background" Value="Transparent" />
                    </MultiDataTrigger>

                    <!--selected, inactive-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="True" />
                            <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource TreeView.SelectedItem.InactiveGlyph}" />
                    </MultiDataTrigger>

                    <!--selected, inactive, hovered-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="True" />
                            <Condition Binding="{Binding IsSelectionActive, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="False" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource TreeView.SelectedItem.InactiveGlyphMouseOver}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>

        <Setter Property="Foreground" Value="{DynamicResource TreeView.Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,0,0,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <StackPanel>
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.Margin>
                                    <MultiBinding Converter="{StaticResource marginConverter}">
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="Padding" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </Grid.Margin>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="18" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="expander"
                                        VerticalAlignment="Center" ClickMode="Press"
                                        Style="{StaticResource ExpanderToggleStyle}"
                                        IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ContentPresenter x:Name="PART_Header" Grid.Column="1"
                                        ContentSource="Header" TextOptions.TextFormattingMode="Display"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                                        ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" />
                            </Grid>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsSelectionActive" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource TreeView.SelectedItem.ActiveForeground}" />
                <Setter Property="Background" Value="{DynamicResource TreeView.SelectedItem.ActiveBackground}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource TreeView.SelectedItem.InactiveForeground}" />
                <Setter Property="Background" Value="{DynamicResource TreeView.SelectedItem.InactiveBackground}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Studio.StatusBarStyle" TargetType="StatusBar">
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Padding" Value="1" />
    </Style>

    <!--#endregion-->

    <!--#region ToolBar-->

    <Style x:Key="Studio.ToolBarTrayStyle" TargetType="ToolBarTray">
        <Setter Property="Background" Value="{DynamicResource Environment.CommandShelf.BackgroundGradient}" />
        <Style.Triggers>
            <Trigger Property="IsLocked" Value="True">
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.Gradient}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Studio.ToolBarStyle" TargetType="ToolBar">
        <Style.Resources>
            <Style x:Key="ToolBarThumbStyle" TargetType="Thumb">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Cursor" Value="SizeAll" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.DragHandle}" />
                <Setter Property="Template" Value="{StaticResource DragHandleTemplate}" />
                <Setter Property="Width" Value="5" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Margin" Value="2,3" />
            </Style>
            <Style x:Key="ToolBarOverflowButtonStyle" TargetType="ToggleButton">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="VerticalContentAlignment" Value="Bottom" />
                <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.OptionsGlyph}" />
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.OptionsBackground}" />
                <Setter Property="BorderThickness" Value="0" />

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.OptionsMouseOverBackground}" />
                        <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.OptionsMouseOverGlyph}" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.OptionsMouseDownBackground}" />
                        <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.OptionsMouseDownGlyph}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.Gradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.ToolBarBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="9,1,-9,1" />
        <Setter Property="Padding" Value="1,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolBar">
                    <DockPanel Background="{TemplateBinding BorderBrush}">
                        <ToggleButton x:Name="OverflowToggle" DockPanel.Dock="Right" ClickMode="Press"
                                IsEnabled="{TemplateBinding HasOverflowItems}"
                                Style="{StaticResource ToolBarOverflowButtonStyle}"
                                IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <Path Margin="1,3" VerticalAlignment="Bottom"
                                  Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"
                                  Data="M0,0 H6 V1 H0 Z M0,3 L3,6 L6,3 Z" />
                        </ToggleButton>
                        <Popup PlacementTarget="{Binding ElementName=OverflowToggle}"
                               AllowsTransparency="True" Placement="Bottom"
                               StaysOpen="False" Focusable="False"
                               HorizontalOffset="-6" VerticalOffset="1"
                               IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border ClipToBounds="True" Padding="0,0,5,5">
                                <Border BorderThickness="1" Margin="0,0,2,0"
                                        Background="{DynamicResource Environment.CommandBar.MenuBackgroundGradient}"
                                        BorderBrush="{DynamicResource Environment.CommandBar.MenuBorder}">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.5" Direction="300" />
                                    </Border.Effect>
                                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                            Margin="2" WrapWidth="200"
                                            Focusable="True" FocusVisualStyle="{x:Null}"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Border>
                        </Popup>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel>
                                <Thumb x:Name="ToolBarThumb" Style="{StaticResource ToolBarThumbStyle}" />
                                <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="True" Margin="{TemplateBinding Padding}" />
                            </DockPanel>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasOverflowItems" Value="False">
                            <Setter TargetName="OverflowToggle" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsOverflowOpen" Value="True">
                            <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="True">
                            <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="ToolBarTray.IsLocked" Value="True">
                <Setter Property="Margin" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="5,2" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Studio.ToolBarButtonStyle" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />
        <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextActive}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="3" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextHover}" />
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextMouseDown}" />
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MouseDownBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.MouseDownBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Studio.ToolBarToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />
        <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextActive}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="3" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextHover}" />
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextMouseDown}" />
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MouseDownBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.MouseDownBorder}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.Selected}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.SelectedBorder}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.HoverOverSelectedIcon}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.HoverOverSelectedIconBorder}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Studio.ToolBarComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource Studio.ComboBoxStyle}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="Studio.ToolBarSeparatorStyle" TargetType="Separator">
        <Setter Property="Margin" Value="3,2" />
        <Setter Property="Width" Value="2" />

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1,0,0,0" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.ToolBarSeparator}" />
        <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.ToolBarSeparatorHighlight}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Menu-->

    <Style x:Key="Studio.MenuStyle" TargetType="Menu">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource Environment.CommandShelf.HighlightGradient}" />
        <Setter Property="Padding" Value="0,1" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ItemsPresenter Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Studio.MenuItemSeparatorStyle" TargetType="Separator">
        <Setter Property="Margin" Value="3,1,2,1" />
        <Setter Property="Height" Value="1" />

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.MenuSeparator}" />
        <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MenuSeparator}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="MenuPopupIcon" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="0" MinWidth="27" />
                        <Border Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--header level item with no children-->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" BorderThickness="1">
            <ContentPresenter x:Name="Presenter" Margin="9,0,9,1"
                    ContentSource="Header" RecognizesAccessKey="True"
                    TextBlock.Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                    TextOptions.TextFormattingMode="Display" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextHover}" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBar.MouseOverBackground}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
        <Grid>
            <Border x:Name="Border" BorderThickness="1">
                <ContentPresenter x:Name="Presenter" Margin="9,0,9,1"
                        ContentSource="Header" RecognizesAccessKey="True"
                        TextBlock.Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                        TextOptions.TextFormattingMode="Display" />
            </Border>
            <Popup x:Name="Popup" Placement="Relative"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True" Focusable="False"
                    Grid.IsSharedSizeScope="True"
                    PopupAnimation="None">
                <StackPanel Orientation="Vertical">
                    <DockPanel Panel.ZIndex="1" LastChildFill="False">
                        <Border DockPanel.Dock="Left" SnapsToDevicePixels="True"
                                BorderThickness="1,1,1,0"
                                BorderBrush="{DynamicResource Environment.CommandBar.MenuBorder}"
                                Background="{DynamicResource Environment.CommandBar.MenuBackgroundGradient}">
                            <ContentPresenter Margin="9,0,9,2"
                                    ContentSource="Header" RecognizesAccessKey="True"
                                    TextBlock.Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                                    TextOptions.TextFormattingMode="Display" />
                        </Border>
                    </DockPanel>
                    <Border ClipToBounds="True" Margin="0,-1,0,0">
                        <Border x:Name="SubmenuBorder"
                                Panel.ZIndex="0" Margin="0,0,3,3"
                                SnapsToDevicePixels="True"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource Environment.CommandBar.MenuBorder}"
                                Background="{DynamicResource Environment.CommandBar.MenuBackgroundGradient}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="MenuPopupIcon" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Margin="0,1,0,0" Grid.Column="0"
                                        VerticalAlignment="Stretch" MinWidth="27"
                                        Background="{DynamicResource Environment.CommandBar.MenuIconBackground}" />
                                <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Margin="2" IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.5" Direction="300" />
                            </Border.Effect>
                        </Border>
                    </Border>
                </StackPanel>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextHover}" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBar.MouseOverBackground}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--submenu item with no children-->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" Background="Transparent"
                BorderThickness="1" SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuPopupIcon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition SharedSizeGroup="MenuPopupShortcut" />
                    <ColumnDefinition Width="18" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <Border x:Name="CheckBox" SnapsToDevicePixels="True" Visibility="Collapsed"
                            Width="18" Height="18" BorderThickness="2" Margin="1,0"
                            Background="{DynamicResource Environment.CommandBar.SelectedIcon}"
                            BorderBrush="{DynamicResource Environment.CommandBar.CheckBox}">
                        <ContentControl x:Name="CheckIcon" HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Foreground="{DynamicResource Environment.CommandBar.CheckBox}" />
                    </Border>
                    <Border x:Name="IconBox" SnapsToDevicePixels="True" Visibility="Visible">
                        <ContentPresenter x:Name="Icon" ContentSource="Icon"
                                HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </StackPanel>
                <ContentPresenter x:Name="Presenter" Grid.Column="1"
                        Margin="6,3,36,2"
                        ContentSource="Header" RecognizesAccessKey="True"
                        TextBlock.Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                        TextOptions.TextFormattingMode="Display" />
                <TextBlock x:Name="InputGestureText"
                        Grid.Column="2" Margin="0,3,0,2"
                        Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                        Text="{TemplateBinding InputGestureText}"
                        TextOptions.TextFormattingMode="Display" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="CheckBox" Property="Visibility" Value="Hidden" />
                <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckBox" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="CheckBox" Property="Background" Value="{DynamicResource Environment.CommandBar.HoverOverSelectedIcon}" />
                <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.CheckBoxMouseOver}" />
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverForeground}" />
                <Setter TargetName="InputGestureText" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverForeground}" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverBackground}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="CheckBox" Property="Background" Value="{DynamicResource Environment.CommandBar.SelectedIconDisabled}" />
                <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.CheckBoxDisabled}" />
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
                <Setter TargetName="InputGestureText" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" Background="Transparent"
                BorderThickness="1" SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuPopupIcon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition SharedSizeGroup="MenuPopupShortcut" />
                    <ColumnDefinition Width="18" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <Border x:Name="CheckBox" SnapsToDevicePixels="True" Visibility="Collapsed"
                            Width="18" Height="18" BorderThickness="2" Margin="1,0"
                            Background="{DynamicResource Environment.CommandBar.SelectedIcon}"
                            BorderBrush="{DynamicResource Environment.CommandBar.CheckBox}">
                        <ContentControl x:Name="CheckIcon" HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Foreground="{DynamicResource Environment.CommandBar.CheckBox}" />
                    </Border>
                    <Border x:Name="IconBox" SnapsToDevicePixels="True" Visibility="Visible">
                        <ContentPresenter x:Name="Icon" ContentSource="Icon"
                                HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </StackPanel>
                <ContentPresenter x:Name="Presenter" Grid.Column="1"
                        Margin="6,3,36,2"
                        ContentSource="Header" RecognizesAccessKey="True"
                        TextBlock.Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                        TextOptions.TextFormattingMode="Display" />
                <TextBlock x:Name="InputGestureText"
                        Grid.Column="2" Margin="0,3,0,2"
                        Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                        Text="{TemplateBinding InputGestureText}"
                        TextOptions.TextFormattingMode="Display" />
                <Path x:Name="Indicator" Grid.Column="3"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Fill="{DynamicResource Environment.CommandBar.MenuSubmenuGlyph}"
                        Data="M0,0 L0,7 L4,3.5 Z" />
                <Popup x:Name="Popup" Placement="Right"
                        IsOpen="{TemplateBinding IsSubmenuOpen}"
                        VerticalOffset="-1" HorizontalOffset="1"
                        AllowsTransparency="True" Grid.IsSharedSizeScope="True"
                        Focusable="False" PopupAnimation="None">
                    <Border x:Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            BorderThickness="1" Margin="0,0,3,3"
                            BorderBrush="{DynamicResource Environment.CommandBar.MenuBorder}"
                            Background="{DynamicResource Environment.CommandBar.MenuBackgroundGradient}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="MenuPopupIcon" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" MinWidth="27"
                                    VerticalAlignment="Stretch"
                                    Background="{DynamicResource Environment.CommandBar.MenuIconBackground}" />
                            <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Margin="2" IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Grid>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.5" Direction="300" />
                        </Border.Effect>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="CheckBox" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckBox" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="CheckBox" Property="Background" Value="{DynamicResource Environment.CommandBar.HoverOverSelectedIcon}" />
                <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.CheckBoxMouseOver}" />
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverForeground}" />
                <Setter TargetName="InputGestureText" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverForeground}" />
                <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource Environment.CommandBar.MenuMouseOverSubmenuGlyph}" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverBackground}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="CheckBox" Property="Background" Value="{DynamicResource Environment.CommandBar.SelectedIconDisabled}" />
                <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.CheckBoxDisabled}" />
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
                <Setter TargetName="InputGestureText" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
                <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="Studio.ContextMenuStyle" TargetType="ContextMenu">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MenuBackgroundGradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.MenuBorder}" />
        <Setter Property="BorderThickness" Value="1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border ClipToBounds="True" Grid.IsSharedSizeScope="True">
                        <Border x:Name="Border" Panel.ZIndex="0" Margin="0,0,3,3"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="MenuPopupIcon" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" MinWidth="27"
                                        VerticalAlignment="Stretch"
                                        Background="{DynamicResource Environment.CommandBar.MenuIconBackground}" />
                                <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Margin="2" IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.5" Direction="300" />
                            </Border.Effect>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="False">
                            <Setter TargetName="Border" Property="Margin" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ScrollViewer-->

    <Style x:Key="Studio.ScrollBarLineButtonStyle" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False" />

        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ArrowBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ArrowGlyph}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border x:Name="Border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ArrowMouseOverBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ArrowGlyphMouseOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ArrowPressedBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ArrowGlyphPressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ArrowDisabledBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ArrowGlyphDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />

        <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ThumbGlyph}" />
        <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ThumbBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.ScrollBar.ThumbBorder}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ThumbGlyphMouseOverBorder}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ThumbMouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ScrollBar.ThumbMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ThumbGlyphPressedBorder}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ThumbPressedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ScrollBar.ThumbPressedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ThumbDisabled}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ThumbDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ScrollBar.ThumbDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="ScrollBar">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" Background="{DynamicResource Environment.ScrollBar.Background}" />
            <RepeatButton Grid.Row="0" Height="17"
                    Style="{StaticResource Studio.ScrollBarLineButtonStyle}"
                    Command="ScrollBar.LineUpCommand">
                <ContentControl Template="{StaticResource Studio.ScrollArrowUpGlyph}"
                                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RepeatButton}}" />
            </RepeatButton>
            <Track x:Name="PART_Track" Grid.Row="1"
                    IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="4,0" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Height="17"
                    Style="{StaticResource Studio.ScrollBarLineButtonStyle}"
                    Command="ScrollBar.LineDownCommand">
                <ContentControl Template="{StaticResource Studio.ScrollArrowDownGlyph}"
                                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RepeatButton}}" />
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="ScrollBar">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" Background="{DynamicResource Environment.ScrollBar.Background}" />
            <RepeatButton Grid.Column="0" Width="17"
                        Style="{StaticResource Studio.ScrollBarLineButtonStyle}"
                        Command="ScrollBar.LineLeftCommand">
                <ContentControl Template="{StaticResource Studio.ScrollArrowLeftGlyph}"
                                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RepeatButton}}" />
            </RepeatButton>
            <Track x:Name="PART_Track" Grid.Column="1"
                    IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,4" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Width="17"
                        Style="{StaticResource Studio.ScrollBarLineButtonStyle}"
                        Command="ScrollBar.LineRightCommand">
                <ContentControl Template="{StaticResource Studio.ScrollArrowRightGlyph}"
                                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RepeatButton}}" />
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style x:Key="Studio.ScrollBarStyle" TargetType="ScrollBar">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="17" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="17" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Studio.ScrollViewerStyle" TargetType="ScrollViewer">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.ScrollBar.Border}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                    Margin="{TemplateBinding Padding}" />
                            <Border Grid.Column="1" Grid.RowSpan="2" Background="{DynamicResource Environment.ScrollBar.Background}" />
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                    Orientation="Vertical" Grid.Column="1"
                                    Value="{TemplateBinding VerticalOffset}"
                                    Maximum="{TemplateBinding ScrollableHeight}"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                    Orientation="Horizontal" Grid.Row="1"
                                    Value="{TemplateBinding HorizontalOffset}"
                                    Maximum="{TemplateBinding ScrollableWidth}"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Custom Controls-->

    <Style x:Key="Studio.SplitButtonStyle" TargetType="c:SplitButton" BasedOn="{StaticResource Studio.ToolBarButtonStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:SplitButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="1" />
                            <ColumnDefinition Width="11" />
                        </Grid.ColumnDefinitions>

                        <Border Grid.ColumnSpan="3"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </Border>
                        <Border Grid.Column="0" BorderBrush="Transparent" Background="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    TextBlock.Foreground="{TemplateBinding Foreground}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Border x:Name="Separator" Grid.Column="1" Width="1" Margin="0,1" Background="{DynamicResource Environment.CommandBar.SplitButtonSeparator}" />
                        <ToggleButton x:Name="ToggleButton" Grid.Column="2" Margin="0,1,1,1"
                                      Focusable="False" ClickMode="Press" Background="Transparent"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Foreground="{DynamicResource Environment.CommandBar.SplitButtonGlyph}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="{TemplateBinding Background}">
                                        <Path Margin="0,1,0,0" Fill="{TemplateBinding Foreground}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M0,0 L3,3 L6,0 Z" />
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="Separator" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource Environment.CommandBar.SplitButtonMouseOverGlyph}" />
                            <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource Environment.CommandBar.MouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource Environment.CommandBar.SplitButtonMouseDownGlyph}" />
                            <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource Environment.CommandBar.MouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextMouseDown}" />
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MouseDownBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.Border}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Studio.SearchControlStyle" TargetType="c:SearchControl">
        <Style.Resources>
            <Style x:Key="ActionButtonStyle" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource SearchControl.ActionButtonMouseOverGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource SearchControl.ActionButtonMouseOver}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource SearchControl.ActionButtonMouseOverBorder}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource SearchControl.ActionButtonMouseDownGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource SearchControl.ActionButtonMouseDown}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource SearchControl.ActionButtonMouseDownBorder}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource SearchControl.ActionButtonDisabledGlyph}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>

        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SelectionBrush" Value="{DynamicResource SearchControl.Selection}" />
        <Setter Property="Padding" Value="2,1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:SearchControl">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <DockPanel>
                            <Button x:Name="PART_AcceptButton" DockPanel.Dock="Right"
                                    Style="{TemplateBinding AcceptButtonStyle}">
                                <ContentControl Template="{StaticResource SearchAcceptGlyph}" Margin="1"
                                        Foreground="{Binding Foreground, ElementName=PART_AcceptButton}" />
                            </Button>
                            <Button x:Name="PART_CancelButton" DockPanel.Dock="Right"
                                    Style="{TemplateBinding CancelButtonStyle}">
                                <ContentControl Template="{StaticResource SearchClearGlyph}" Margin="1"
                                        Foreground="{Binding Foreground, ElementName=PART_CancelButton}" />
                            </Button>
                            <Grid>
                                <ScrollViewer Panel.ZIndex="0" x:Name="PART_ContentHost" />
                                <TextBox x:Name="watermark" Panel.ZIndex="1" IsHitTestVisible="False"
                                         Background="Transparent" BorderThickness="0" Visibility="Collapsed"
                                         SnapsToDevicePixels="{Binding SnapsToDevicePixels, RelativeSource={RelativeSource AncestorType=c:SearchControl}}"
                                         TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource AncestorType=c:SearchControl}}"
                                         Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType=c:SearchControl}}"
                                         Text="{Binding WatermarkText, RelativeSource={RelativeSource AncestorType=c:SearchControl}}" />
                            </Grid>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSearchActive" Value="True">
                            <Setter TargetName="PART_AcceptButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_CancelButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSearchActive" Value="False">
                            <Setter TargetName="PART_AcceptButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_CancelButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="watermark" Property="Foreground" Value="{DynamicResource SearchControl.UnfocusedWatermarkText}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="watermark" Property="Foreground" Value="{DynamicResource SearchControl.MouseOverWatermarkText}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                                <Condition Property="IsSearchActive" Value="False" />
                                <Condition Property="HasText" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="watermark" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="AcceptButtonStyle">
            <Setter.Value>
                <Style TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
                    <Setter Property="Foreground" Value="{DynamicResource SearchControl.SearchGlyph}" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=c:SearchControl}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource SearchControl.MouseOverSearchGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType=c:SearchControl}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource SearchControl.FocusedSearchGlyph}" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="CancelButtonStyle">
            <Setter.Value>
                <Style TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
                    <Setter Property="Foreground" Value="{DynamicResource SearchControl.ClearGlyph}" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=c:SearchControl}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource SearchControl.MouseOverClearGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType=c:SearchControl}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource SearchControl.FocusedClearGlyph}" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SearchControl.UnfocusedForeground}" />
                <Setter Property="Background" Value="{DynamicResource SearchControl.UnfocusedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SearchControl.UnfocusedBorder}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SearchControl.MouseOverForeground}" />
                <Setter Property="Background" Value="{DynamicResource SearchControl.MouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SearchControl.MouseOverBorder}" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SearchControl.FocusedForeground}" />
                <Setter Property="Background" Value="{DynamicResource SearchControl.FocusedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SearchControl.FocusedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource SearchControl.DisabledForeground}" />
                <Setter Property="Background" Value="{DynamicResource SearchControl.DisabledBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SearchControl.DisabledBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Studio.DockContainerStyle" TargetType="c:DockContainer">
        <Setter Property="Padding" Value="6" />

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <RotateTransform x:Key="transform" Angle="90" />
                        <Style x:Key="dockButtonStyle" TargetType="ToggleButton">
                            <Setter Property="Foreground" Value="{DynamicResource Environment.AutoHideTabText}" />
                            <Setter Property="Background" Value="{DynamicResource Environment.AutoHideTabBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource Environment.AutoHideTabBorder}" />

                            <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />

                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource Environment.AutoHideTabMouseOverBackground}" />
                                    <Setter Property="Foreground" Value="{DynamicResource Environment.AutoHideTabMouseOverText}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource Environment.AutoHideTabMouseOverBorder}" />
                                </Trigger>
                                <!--<Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource Environment.AutoHideTabMouseOverBackground}" />
                                    <Setter Property="Foreground" Value="{DynamicResource Environment.AutoHideTabMouseOverText}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource Environment.AutoHideTabMouseOverBorder}" />
                                </Trigger>-->
                                <Trigger Property="DockPanel.Dock" Value="Left">
                                    <Setter Property="Margin" Value="0,6" />
                                    <Setter Property="Padding" Value="0,0,0,4" />
                                    <Setter Property="BorderThickness" Value="0,0,0,6" />
                                </Trigger>
                                <Trigger Property="DockPanel.Dock" Value="Top">
                                    <Setter Property="Margin" Value="6,0" />
                                    <Setter Property="Padding" Value="0,4,0,0" />
                                    <Setter Property="BorderThickness" Value="0,6,0,0" />
                                </Trigger>
                                <Trigger Property="DockPanel.Dock" Value="Right">
                                    <Setter Property="Margin" Value="0,6" />
                                    <Setter Property="Padding" Value="0,4,0,0" />
                                    <Setter Property="BorderThickness" Value="0,6,0,0" />
                                </Trigger>
                                <Trigger Property="DockPanel.Dock" Value="Bottom">
                                    <Setter Property="Margin" Value="6,0" />
                                    <Setter Property="Padding" Value="0,0,0,4" />
                                    <Setter Property="BorderThickness" Value="0,0,0,6" />
                                </Trigger>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="BorderBrush" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataTemplate.Resources>
                    <ToggleButton Name="btn" Content="{Binding Header}"
                            TextOptions.TextFormattingMode="Display"
                            IsChecked="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                            DockPanel.Dock="{Binding (DockPanel.Dock), RelativeSource={RelativeSource AncestorType=ItemsControl}}"
                            Style="{StaticResource dockButtonStyle}" />
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=btn, Path=(DockPanel.Dock)}" Value="Right">
                            <Setter TargetName="btn" Property="LayoutTransform" Value="{StaticResource transform}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=btn, Path=(DockPanel.Dock)}" Value="Left">
                            <Setter TargetName="btn" Property="LayoutTransform" Value="{StaticResource transform}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Studio.SplitPanelStyle" TargetType="c:SplitPanel">
        <Setter Property="SplitterThickness" Value="6" />
    </Style>

    <Style x:Key="Studio.SplitPanelSplitterStyle" TargetType="c:SplitPanelSplitter">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=c:SplitPanel}}" Value="Horizontal">
                <Setter Property="Background" Value="{DynamicResource Environment.VerticalResizeGrip}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=c:SplitPanel}}" Value="Vertical">
                <Setter Property="Background" Value="{DynamicResource Environment.HorizontalResizeGrip}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#region DocumentWell-->
    <Style x:Key="{x:Static c:DocumentWell.DocumentTabStyleKey}" TargetType="c:TabWellItem">
        <Style.Resources>
            <Style x:Key="TabButtonStyle" TargetType="Button">
                <Setter Property="Padding" Value="0" />
                <Setter Property="Margin" Value="3,0,0,0" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />

                <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.HotGlyph}" />

                <Style.Triggers>
                    <!--selected, active-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="True" />
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.ButtonSelectedActiveGlyph}" />
                    </MultiDataTrigger>

                    <!--selected, active, hovered-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="True" />
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.ButtonHoverSelectedActiveGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.FileTab.ButtonHoverSelectedActive}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.FileTab.ButtonHoverSelectedActiveBorder}" />
                    </MultiDataTrigger>

                    <!--selected, active, pressed-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="True" />
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True" />
                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.ButtonDownSelectedActiveGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.FileTab.ButtonDownSelectedActive}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.FileTab.ButtonDownSelectedActiveBorder}" />
                    </MultiDataTrigger>

                    <!--selected, inactive-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="False" />
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.ButtonSelectedInactiveGlyph}" />
                    </MultiDataTrigger>

                    <!--selected, inactive, hovered-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="False" />
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.ButtonHoverSelectedInactiveGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.FileTab.ButtonHoverSelectedInactive}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.FileTab.ButtonHoverSelectedInactiveBorder}" />
                    </MultiDataTrigger>

                    <!--selected, inactive, pressed-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="False" />
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True" />
                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.ButtonDownSelectedInactiveGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.FileTab.ButtonDownSelectedInactive}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.FileTab.ButtonDownSelectedInactiveBorder}" />
                    </MultiDataTrigger>

                    <!--unselected, tab hovered-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="False" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.HotGlyph}" />
                    </MultiDataTrigger>

                    <!--unselected, tab hovered, button hovered-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="False" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.ButtonHoverInactiveGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.FileTab.ButtonHoverInactive}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.FileTab.ButtonHoverInactiveBorder}" />
                    </MultiDataTrigger>

                    <!--unselected, tab hovered, button pressed-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="False" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=TabItem}}" Value="True" />
                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.ButtonDownInactiveGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.FileTab.ButtonDownInactive}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.FileTab.ButtonDownInactiveBorder}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>

        <Setter Property="Padding" Value="3,1,3,3" />
        <Setter Property="BorderThickness" Value="0,2,0,0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:TabWellItem">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Button x:Name="PinButton" Style="{StaticResource TabButtonStyle}"
                                        Template="{StaticResource ButtonBaseTemplate}"
                                        Command="{TemplateBinding TogglePinStatusCommand}"
                                        CommandParameter="{Binding}">
                                    <ContentControl x:Name="PinButtonContent" Template="{StaticResource TabPinGlyph}" />
                                </Button>
                                <Button x:Name="CloseButton" Style="{StaticResource TabButtonStyle}"
                                        Template="{StaticResource ButtonBaseTemplate}"
                                        Command="{TemplateBinding CloseCommand}"
                                        CommandParameter="{Binding}">
                                    <ContentControl Template="{StaticResource TabCloseGlyph}" />
                                </Button>
                            </StackPanel>
                            <ContentPresenter Name="PART_Container" Margin="1,0"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    TextBlock.Foreground="{TemplateBinding Foreground}"
                                    TextOptions.TextFormattingMode="Display"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Header}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PinButton" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Hidden" />
                        </MultiTrigger>
                        <Trigger Property="c:DockManager.IsPinned" Value="True">
                            <Setter TargetName="PinButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PinButtonContent" Property="Template" Value="{StaticResource TabUnpinGlyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--unselected-->
        <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.Text}" />
        <Setter Property="Background" Value="{DynamicResource Environment.FileTab.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.FileTab.Border}" />

        <Style.Triggers>
            <!--selected, active-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.SelectedText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.FileTab.SelectedGradient}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.FileTab.SelectedBorder}" />
            </MultiDataTrigger>

            <!--selected, inactive-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.InactiveText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.FileTab.InactiveGradient}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.FileTab.InactiveBorder}" />
            </MultiDataTrigger>

            <!--unselected, hovered-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.FileTab.HotText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.FileTab.HotGradient}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.FileTab.HotBorder}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="c:DocumentWell">
        <Style.Resources>
            <Style x:Key="OverflowButtonStyle" TargetType="ToggleButton">
                <Setter Property="Margin" Value="2,2,0,3" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="VerticalAlignment" Value="Bottom" />

                <Setter Property="Foreground" Value="{DynamicResource Environment.DocWellOverflowButton.Glyph}" />

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource Environment.DocWellOverflowButton.MouseOverGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.DocWellOverflowButton.MouseOverBackground}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.DocWellOverflowButton.MouseOverBorder}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource Environment.DocWellOverflowButton.MouseDownGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.DocWellOverflowButton.MouseDownBackground}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.DocWellOverflowButton.MouseDownBorder}" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource Environment.DocWellOverflowButton.MouseDownGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.DocWellOverflowButton.MouseDownBackground}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.DocWellOverflowButton.MouseDownBorder}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>

        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="1,0,1,1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.Border}" />

        <Setter Property="ItemContainerStyle" Value="{StaticResource {x:Static c:DocumentWell.DocumentTabStyleKey}}" />
        <Setter Property="OverflowItemStyle">
            <Setter.Value>
                <Style TargetType="MenuItem">
                    <Style.Resources>
                        <u:VisibilityConverter x:Key="visConverter" FalseValue="Collapsed" />
                    </Style.Resources>

                    <Setter Property="Header" Value="{Binding Header}" />
                    <Setter Property="Command" Value="{Binding DataContext.OverflowItemSelectedCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                    <Setter Property="CommandParameter" Value="{Binding}" />
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="HeaderTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <Grid>
                                    <ContentPresenter Content="{Binding}" />
                                    <Button x:Name="CloseButton" Margin="0,-2,-50,0" HorizontalAlignment="Right"
                                            Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuItem}, Converter={StaticResource visConverter}}"
                                            Command="{Binding DataContext.OverflowItemClosedCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <ContentControl Margin="2,1" Template="{StaticResource TabCloseGlyph}" />
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <c:DocumentTabPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:DocumentWell">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border x:Name="ItemsPanelBorder" BorderThickness="0,0,0,2"
                                BorderBrush="{DynamicResource Environment.FileTab.InactiveDocumentBorderBackground}">
                            <Grid ClipToBounds="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <ItemsPresenter x:Name="ItemsPresenter"
                                    Grid.Row="1" Margin="0,0,0,-2"
                                    ScrollViewer.CanContentScroll="False"
                                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                    ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                    ScrollViewer.PanningMode="HorizontalOnly" />

                                <Border x:Name="proxyContainer" Grid.Row="1" Grid.Column="1"
                                        DataContext="{Binding RelativeSource={RelativeSource AncestorType=TabControl}}">
                                    <Border.Resources>
                                        <u:ProxyBinding x:Key="tabHostProxy" Source="{Binding}" />
                                    </Border.Resources>
                                    <ToggleButton Style="{StaticResource OverflowButtonStyle}"
                                            DataContext="{Binding RelativeSource={RelativeSource Self}}"
                                            Template="{StaticResource ButtonBaseTemplate}">
                                        <ToggleButton.Resources>
                                            <u:ProxyBinding x:Key="toggleProxy" Source="{Binding}" />
                                        </ToggleButton.Resources>

                                        <ContentControl x:Name="OverflowButtonContent" Template="{StaticResource DocWellOverflowGlyph}" />

                                        <ToggleButton.ContextMenu>
                                            <ContextMenu Placement="Bottom"
                                                    DataContext="{Binding Source, Source={StaticResource tabHostProxy}}"
                                                    PlacementTarget="{Binding Source, Source={StaticResource toggleProxy}}"
                                                    IsOpen="{Binding Source.IsChecked, Source={StaticResource toggleProxy}}"
                                                    ItemsSource="{Binding Source.Items, Source={StaticResource tabHostProxy}}"
                                                    ItemContainerStyle="{Binding Source.OverflowItemStyle, Source={StaticResource tabHostProxy}}" />
                                        </ToggleButton.ContextMenu>
                                    </ToggleButton>
                                </Border>
                            </Grid>
                        </Border>
                        <Border Name="ContentPanel" Grid.Row="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding SelectedContent}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="c:DockManager.IsActive" Value="True">
                            <Setter TargetName="ItemsPanelBorder" Property="BorderBrush" Value="{DynamicResource Environment.FileTab.DocumentBorderBackground}" />
                        </Trigger>
                        <Trigger Property="c:DocumentTabPanel.HasOverflowItems" Value="True">
                            <Setter TargetName="OverflowButtonContent" Property="Template" Value="{StaticResource DocWellOverflowGlyph2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region ToolWell-->
    <Style x:Key="{x:Static c:ToolWell.ToolTabStyleKey}" TargetType="c:TabWellItem">
        <Style.Resources>
            <u:ToolTabMarginConverter x:Key="marginConverter" />
            <u:ToolTabBorderThicknessConverter x:Key="borderConverter" />
        </Style.Resources>

        <Setter Property="Padding" Value="5,2,4,1" />
        <Setter Property="BorderThickness" Value="0,0,0,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:TabWellItem">
                    <Border x:Name="OuterBorder" Margin="0" BorderThickness="0"
                            BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource AncestorType=c:ToolWell}}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ContentPresenter Name="PART_Container" Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    TextBlock.Foreground="{TemplateBinding Foreground}"
                                    TextOptions.TextFormattingMode="Display"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Content="{TemplateBinding Header}" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="OuterBorder" Property="Margin"
                                    Value="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=TabControl}, Converter={StaticResource marginConverter}}" />
                            <Setter TargetName="OuterBorder" Property="BorderThickness"
                                    Value="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=TabControl}, Converter={StaticResource borderConverter}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!--unselected-->
        <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.TabText}" />
        <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.TabGradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.TabBorder}" />

        <Style.Triggers>
            <!--selected, active-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="True" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.TabSelectedActiveText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.TabSelectedTab}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.TabSelectedBorder}" />
            </MultiDataTrigger>

            <!--selected, inactive-->
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="False" />
                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.TabSelectedText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.TabSelectedTab}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.TabSelectedBorder}" />
            </MultiDataTrigger>

            <!--unselected, hovered-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.TabMouseOverText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.TabMouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.TabMouseOverBorder}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="c:ToolWell">
        <Style.Resources>
            <Style x:Key="CaptionButtonStyle" TargetType="Button">
                <Setter Property="Margin" Value="0,0,1,0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />

                <!--inactive-->
                <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.ButtonInactiveGlyph}" />

                <Style.Triggers>
                    <!--active-->
                    <DataTrigger Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.ButtonActiveGlyph}" />
                    </DataTrigger>

                    <!--active, hovered-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="True" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.ButtonHoverActiveGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.ButtonHoverActive}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.ButtonHoverActiveBorder}" />
                    </MultiDataTrigger>

                    <!--active, pressed-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="True" />
                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.ButtonDownActiveGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.ButtonDown}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.ButtonDownBorder}" />
                    </MultiDataTrigger>

                    <!--inactive, hovered-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="False" />
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.ButtonHoverInactiveGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.ButtonHoverInactive}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.ButtonHoverInactiveBorder}" />
                    </MultiDataTrigger>

                    <!--inactive, pressed-->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=(c:DockManager.IsActive), RelativeSource={RelativeSource AncestorType=TabControl}}" Value="False" />
                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="{DynamicResource Environment.ToolWindow.ButtonDownInactiveGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.ButtonDown}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.ButtonDownBorder}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>

        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="{DynamicResource Environment.ToolWindow.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.ToolWindow.Border}" />

        <Setter Property="ItemContainerStyle" Value="{StaticResource {x:Static c:ToolWell.ToolTabStyleKey}}" />

        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <c:ToolTabPanel IsItemsHost="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:ToolWell">
                    <DockPanel LastChildFill="True">
                        <ItemsPresenter x:Name="ItemsPresenter"
                                DockPanel.Dock="Bottom" Panel.ZIndex="1"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                ScrollViewer.PanningMode="HorizontalOnly"
                                ScrollViewer.CanContentScroll="False" />
                        <Border Panel.ZIndex="0"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <DockPanel LastChildFill="True">
                                <DockPanel x:Name="PART_TitleBar" DockPanel.Dock="Top" LastChildFill="True"
                                           Background="{DynamicResource Environment.TitleBar.InactiveGradient}">
                                    <ContentPresenter x:Name="TitleBarContent" DockPanel.Dock="Left"
                                            Margin="4,2,4,3" VerticalAlignment="Center"
                                            IsHitTestVisible="False"
                                            Content="{TemplateBinding Caption}"
                                            TextBlock.Foreground="{DynamicResource Environment.TitleBar.InactiveText}" />
                                    <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Margin="3">
                                        <Button Style="{StaticResource CaptionButtonStyle}">
                                            <ContentControl Template="{StaticResource ToolMenuGlyph}" />
                                        </Button>
                                        <Button Style="{StaticResource CaptionButtonStyle}"
                                                Command="{TemplateBinding TogglePinStatusCommand}">
                                            <ContentControl x:Name="pinContent" Template="{StaticResource ToolPinGlyph}" />
                                        </Button>
                                        <Button Style="{StaticResource CaptionButtonStyle}"
                                                Command="{TemplateBinding CloseCommand}">
                                            <ContentControl Template="{StaticResource TabCloseGlyph}" />
                                        </Button>
                                    </StackPanel>
                                    <Thumb x:Name="TitleBarGrip" Margin="2,0"
                                           IsHitTestVisible="False"
                                           Height="5" VerticalAlignment="Center"
                                           SnapsToDevicePixels="True" UseLayoutRounding="True"
                                           Template="{StaticResource DragHandleTemplate}"
                                           Foreground="{DynamicResource Environment.TitleBar.DragHandle}" />
                                </DockPanel>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding SelectedContent}" />
                            </DockPanel>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="c:DockManager.IsActive" Value="True">
                            <Setter TargetName="PART_TitleBar" Property="Background" Value="{DynamicResource Environment.TitleBar.ActiveGradient}" />
                            <Setter TargetName="TitleBarContent" Property="TextBlock.Foreground" Value="{DynamicResource Environment.TitleBar.ActiveText}" />
                            <Setter TargetName="TitleBarGrip" Property="Foreground" Value="{DynamicResource Environment.TitleBar.DragHandleActive}" />
                        </Trigger>
                        <Trigger Property="c:DockManager.IsPinned" Value="True">
                            <Setter TargetName="pinContent" Property="Template" Value="{StaticResource ToolUnpinGlyph}" />
                        </Trigger>
                        <Trigger Property="HideTitleBar" Value="True">
                            <Setter TargetName="PART_TitleBar" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region DockTarget-->

    <Style x:Key="Studio.DockTargetButtonStyle" TargetType="c:DockTargetButton">
        <Style.Resources>
            <Style TargetType="Canvas">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="UseLayoutRounding" Value="True" />
            </Style>
            <Style TargetType="Path">
                <Setter Property="StrokeStartLineCap" Value="Square" />
                <Setter Property="StrokeEndLineCap" Value="Square" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="StrokeThickness" Value="1" />
            </Style>
            <Style TargetType="Line">
                <Setter Property="StrokeStartLineCap" Value="Square" />
                <Setter Property="StrokeEndLineCap" Value="Square" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="UseLayoutRounding" Value="True" />
                <Setter Property="StrokeThickness" Value="1" />
            </Style>
        </Style.Resources>

        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Opacity" Value="0.6" />
        <Setter Property="CornerRadius" Value="2" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />

        <Setter Property="Background" Value="{DynamicResource Environment.DockTarget.ButtonBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.DockTarget.ButtonBorder}" />
        <Setter Property="GlyphBackground" Value="{DynamicResource Environment.DockTarget.GlyphBackground}" />
        <Setter Property="GlyphBorderBrush" Value="{DynamicResource Environment.DockTarget.GlyphBorder}" />
        <Setter Property="GlyphArrowBrush" Value="{DynamicResource Environment.DockTarget.GlyphArrow}" />

        <Style.Triggers>
            <Trigger Property="IsTargeted" Value="True">
                <Setter Property="Opacity" Value="1" />
            </Trigger>

            <Trigger Property="TargetDock" Value="Center">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="c:DockTargetButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Canvas Width="24" Height="24">
                                    <Border Width="24" Height="24"
                                            BorderBrush="{TemplateBinding GlyphBorderBrush}"
                                            BorderThickness="1,3,1,1" CornerRadius="0,0,1,1"
                                            Background="{TemplateBinding GlyphBackground}" />
                                </Canvas>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TargetDock" Value="SplitLeft">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="c:DockTargetButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Canvas Width="24" Height="24">
                                    <Border Canvas.Left="0" Width="12" Height="24"
                                            BorderThickness="1,3,0,1" Background="{TemplateBinding GlyphBackground}" />
                                    <Border Width="24" Height="24"
                                            BorderBrush="{TemplateBinding GlyphBorderBrush}"
                                            BorderThickness="1,3,1,1" CornerRadius="0,0,1,1" />
                                    <Line Canvas.Left="11" Y1="2" Y2="23" X1="0.5" X2="0.5"
                                          Stroke="{TemplateBinding GlyphBorderBrush}"
                                          StrokeDashArray="1" />
                                </Canvas>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TargetDock" Value="SplitTop">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="c:DockTargetButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Canvas Width="24" Height="24">
                                    <Border Canvas.Top="0" Width="24" Height="12"
                                            BorderThickness="1,3,1,0" Background="{TemplateBinding GlyphBackground}" />
                                    <Border Width="24" Height="24"
                                            BorderBrush="{TemplateBinding GlyphBorderBrush}"
                                            BorderThickness="1,3,1,1" CornerRadius="0,0,1,1" />
                                    <Line Canvas.Top="11" Y1="0.5" Y2="0.5" X1="23" X2="1"
                                          Stroke="{TemplateBinding GlyphBorderBrush}"
                                          StrokeDashArray="1" />
                                </Canvas>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TargetDock" Value="SplitRight">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="c:DockTargetButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Canvas Width="24" Height="24">
                                    <Border Canvas.Right="0" Width="12" Height="24"
                                            BorderThickness="0,3,1,1" Background="{TemplateBinding GlyphBackground}" />
                                    <Border Width="24" Height="24"
                                            BorderBrush="{TemplateBinding GlyphBorderBrush}"
                                            BorderThickness="1,3,1,1" CornerRadius="0,0,1,1" />
                                    <Line Canvas.Left="12" Y1="2" Y2="23" X1="0.5" X2="0.5"
                                          Stroke="{TemplateBinding GlyphBorderBrush}"
                                          StrokeDashArray="1" />
                                </Canvas>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TargetDock" Value="SplitBottom">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="c:DockTargetButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Canvas Width="24" Height="24">
                                    <Border Canvas.Bottom="0" Width="24" Height="12"
                                            BorderThickness="1,0,1,1" Background="{TemplateBinding GlyphBackground}" />
                                    <Border Width="24" Height="24"
                                            BorderBrush="{TemplateBinding GlyphBorderBrush}"
                                            BorderThickness="1,3,1,1" CornerRadius="0,0,1,1" />
                                    <Line Canvas.Top="12" Y1="0.5" Y2="0.5" X1="23" X2="1"
                                          Stroke="{TemplateBinding GlyphBorderBrush}"
                                          StrokeDashArray="1" />
                                </Canvas>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="TargetDock" Value="DockLeft">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="c:DockTargetButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Canvas Width="24" Height="24">
                                    <Path Fill="{TemplateBinding GlyphArrowBrush}"
                                          Data="M22,8 L22,16 L18,12 Z" />
                                    <Border Canvas.Left="0" Width="12" Height="24"
                                            BorderBrush="{TemplateBinding GlyphBorderBrush}"
                                            BorderThickness="1,3,1,1" CornerRadius="0,0,1,1"
                                            Background="{TemplateBinding GlyphBackground}" />
                                </Canvas>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TargetDock" Value="DockTop">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="c:DockTargetButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Canvas Width="24" Height="24">
                                    <Path Fill="{TemplateBinding GlyphArrowBrush}"
                                          Data="M8,22 L16,22 L12,18 Z" />
                                    <Border Canvas.Top="0" Width="24" Height="12"
                                            BorderBrush="{TemplateBinding GlyphBorderBrush}"
                                            BorderThickness="1,3,1,1" CornerRadius="0,0,1,1"
                                            Background="{TemplateBinding GlyphBackground}" />
                                </Canvas>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TargetDock" Value="DockRight">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="c:DockTargetButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Canvas Width="24" Height="24">
                                    <Path Fill="{TemplateBinding GlyphArrowBrush}"
                                          Data="M2,8 L6,12 L2,16 Z" />
                                    <Border Canvas.Right="0" Width="12" Height="24"
                                            BorderBrush="{TemplateBinding GlyphBorderBrush}"
                                            BorderThickness="1,3,1,1" CornerRadius="0,0,1,1"
                                            Background="{TemplateBinding GlyphBackground}" />
                                </Canvas>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TargetDock" Value="DockBottom">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="c:DockTargetButton">
                            <Border Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{TemplateBinding CornerRadius}"
                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Canvas Width="24" Height="24">
                                    <Path Fill="{TemplateBinding GlyphArrowBrush}"
                                          Data="M8,2 L16,2 L12,6 Z" />
                                    <Border Canvas.Bottom="0" Width="24" Height="12"
                                            BorderBrush="{TemplateBinding GlyphBorderBrush}"
                                            BorderThickness="1,3,1,1" CornerRadius="0,0,1,1"
                                            Background="{TemplateBinding GlyphBackground}" />
                                </Canvas>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#endregion-->

    <!--#region Default Overrides-->

    <!--#region Standard Controls-->

    <Style TargetType="TextBox" BasedOn="{StaticResource Studio.TextBoxStyle}" />
    <Style TargetType="Button" BasedOn="{StaticResource Studio.ButtonStyle}" />
    <Style TargetType="ComboBox" BasedOn="{StaticResource Studio.ComboBoxStyle}" />
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource Studio.ComboBoxItemStyle}" />
    <Style TargetType="TreeView" BasedOn="{StaticResource Studio.TreeViewStyle}" />
    <Style TargetType="TreeViewItem" BasedOn="{StaticResource Studio.TreeViewItemStyle}" />
    <Style TargetType="StatusBar" BasedOn="{StaticResource Studio.StatusBarStyle}" />

    <!--#endregion-->

    <!--#region ToolBar-->

    <Style TargetType="ToolBarTray" BasedOn="{StaticResource Studio.ToolBarTrayStyle}" />
    <Style TargetType="ToolBar" BasedOn="{StaticResource Studio.ToolBarStyle}" />
    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button" BasedOn="{StaticResource Studio.ToolBarButtonStyle}" />
    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="ToggleButton" BasedOn="{StaticResource Studio.ToolBarToggleButtonStyle}" />
    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="ComboBox" BasedOn="{StaticResource Studio.ToolBarComboBoxStyle}" />
    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="Separator" BasedOn="{StaticResource Studio.ToolBarSeparatorStyle}" />

    <!--#endregion-->

    <!--#region Menu-->

    <Style TargetType="Menu" BasedOn="{StaticResource Studio.MenuStyle}" />
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator" BasedOn="{StaticResource Studio.MenuItemSeparatorStyle}" />
    <Style TargetType="ContextMenu" BasedOn="{StaticResource Studio.ContextMenuStyle}" />

    <!--#endregion-->

    <!--#region ScrollViewer-->

    <Style TargetType="ScrollBar" BasedOn="{StaticResource Studio.ScrollBarStyle}" />
    <Style TargetType="ScrollViewer" BasedOn="{StaticResource Studio.ScrollViewerStyle}" />

    <!--#endregion-->

    <!--#region Custom Controls-->

    <Style TargetType="c:SplitButton" BasedOn="{StaticResource Studio.SplitButtonStyle}" />
    <Style TargetType="c:SearchControl" BasedOn="{StaticResource Studio.SearchControlStyle}" />
    <Style TargetType="c:DockContainer" BasedOn="{StaticResource Studio.DockContainerStyle}" />
    <Style TargetType="c:SplitPanel" BasedOn="{StaticResource Studio.SplitPanelStyle}" />
    <Style TargetType="c:SplitPanelSplitter" BasedOn="{StaticResource Studio.SplitPanelSplitterStyle}" />

    <!--#region DockTarget-->

    <Style TargetType="c:DockTargetButton" BasedOn="{StaticResource Studio.DockTargetButtonStyle}" />

    <!--#endregion-->

    <!--#endregion-->

    <!--#endregion-->

</ResourceDictionary>