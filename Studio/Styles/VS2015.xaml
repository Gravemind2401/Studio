<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Studio.Controls">

    <!--#region Icon Templates-->
    <ControlTemplate x:Key="ScrollArrowLeftGlyph">
        <Viewbox Width="17" Height="17">
            <Rectangle Width="17" Height="17">
                <Rectangle.Fill>
                    <VisualBrush Viewport="0,0,17,17" ViewportUnits="Absolute">
                        <VisualBrush.Visual>
                            <Image RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True">
                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M17,17L0,17 0,0 17,0z" />
                                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"
                                                                     Geometry="F1 M11,4 L11,14 L6,8.5z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrollArrowUpGlyph">
        <Viewbox Width="17" Height="17">
            <Rectangle Width="17" Height="17">
                <Rectangle.Fill>
                    <VisualBrush Viewport="0,0,17,17" ViewportUnits="Absolute">
                        <VisualBrush.Visual>
                            <Image RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True">
                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M17,17L0,17 0,0 17,0z" />
                                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"
                                                                     Geometry="F1 M4,11 L14,11 L8.5,6z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrollArrowRightGlyph">
        <Viewbox Width="17" Height="17">
            <Rectangle Width="17" Height="17">
                <Rectangle.Fill>
                    <VisualBrush Viewport="0,0,17,17" ViewportUnits="Absolute">
                        <VisualBrush.Visual>
                            <Image RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True">
                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M17,17L0,17 0,0 17,0z" />
                                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"
                                                                     Geometry="F1 M6,4 L6,14 L11,8.5z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrollArrowDownGlyph">
        <Viewbox Width="17" Height="17">
            <Rectangle Width="17" Height="17">
                <Rectangle.Fill>
                    <VisualBrush Viewport="0,0,17,17" ViewportUnits="Absolute">
                        <VisualBrush.Visual>
                            <Image RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True">
                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M17,17L0,17 0,0 17,0z" />
                                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}"
                                                                     Geometry="F1 M4,6 L14,6 L8.5,11z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>

    <ControlTemplate x:Key="ToolBarDragHandle" TargetType="Thumb">
        <Viewbox Width="5" Height="18">
            <Rectangle Width="5" Height="18">
                <Rectangle.Fill>
                    <VisualBrush TileMode="Tile"
                            Viewport="0,0,4,4" ViewportUnits="Absolute"
                            Viewbox="0,0,4,4" ViewboxUnits="Absolute">
                        <VisualBrush.Visual>
                            <Image RenderOptions.EdgeMode="Aliased" SnapsToDevicePixels="True">
                                <Image.Source>
                                    <DrawingImage>
                                        <DrawingImage.Drawing>
                                            <DrawingGroup>
                                                <DrawingGroup.Children>
                                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Thumb}}"
                                                                     Geometry="M0,0 H1 V1 H0 Z M2,2 H3 V3 H2 Z" />
                                                </DrawingGroup.Children>
                                            </DrawingGroup>
                                        </DrawingImage.Drawing>
                                    </DrawingImage>
                                </Image.Source>
                            </Image>
                        </VisualBrush.Visual>
                    </VisualBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>

    <ControlTemplate x:Key="SearchAcceptGlyph">
        <Viewbox Width="16" Height="16">
            <Rectangle Width="16" Height="16">
                <Rectangle.Fill>
                    <DrawingBrush>
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <DrawingGroup.Children>
                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}" 
                                                     Geometry="F1M9.7625,2.96C8.2205,2.96 6.9585,4.01 6.6085,5.48 6.3975,6.39 6.5375,7.3 7.0985,8.07 7.3095,8.42 7.5895,8.7 7.9395,8.91 8.2905,9.12 8.6405,9.33 8.9915,9.4 9.2715,9.47 9.4825,9.47 9.7625,9.47 11.3045,9.47 12.5665,8.42 12.9175,6.95 13.1275,6.11 12.9875,5.2 12.5665,4.5 12.0755,3.8 11.3745,3.31 10.5335,3.1 10.2535,3.03 9.9725,2.96 9.7625,2.96 M2.5425,15C2.1215,15 1.7715,14.86 1.4905,14.58 1.1405,14.3 0.999499999999999,13.88 0.999499999999999,13.53 0.999499999999999,13.11 1.1405,12.76 1.4205,12.48L5.0655,8.77C4.5045,7.58 4.2945,6.25 4.6455,4.99 5.2055,2.68 7.3095,1 9.7625,1 10.1835,1 10.6035,1.07 11.0245,1.14 12.4265,1.49 13.5475,2.33 14.2485,3.52 14.9495,4.71 15.1605,6.11 14.8795,7.51 14.3195,9.89 12.2165,11.5 9.7625,11.5 9.3415,11.5 8.9215,11.43 8.5005,11.36 8.0805,11.22 7.6595,11.08 7.2385,10.87L3.5935,14.51C3.3135,14.86,2.8925,15,2.5425,15" />
                                </DrawingGroup.Children>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>

    <ControlTemplate x:Key="SearchClearGlyph">
        <Viewbox Width="16" Height="16">
            <Rectangle Width="16" Height="16">
                <Rectangle.Fill>
                    <DrawingBrush>
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <DrawingGroup.Children>
                                    <GeometryDrawing Brush="#00FFFFFF" Geometry="F1M16,16L0,16 0,0 16,0z" />
                                    <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContentControl}}" 
                                                     Geometry="F1M4,5L6,5 8,7 10,5 12,5 9,8 12,11 10,11 8,9 6,11 4,11 7,8z" />
                                </DrawingGroup.Children>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Viewbox>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Common Templates-->
    <ControlTemplate x:Key="ButtonBaseTemplate" TargetType="ButtonBase">
        <Border BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <ContentPresenter Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding Content}"
                    TextBlock.Foreground="{TemplateBinding Foreground}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Border>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Standard Controls-->

    <Style TargetType="TextBox">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2,1" />

        <Setter Property="Foreground" Value="{DynamicResource CommonControls.TextBox.Text}" />
        <Setter Property="Background" Value="{DynamicResource CommonControls.TextBox.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.TextBox.Border}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer Panel.ZIndex="0" x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.TextBox.TextFocused}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.TextBox.BackgroundFocused}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.TextBox.BorderFocused}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.TextBox.TextDisabled}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.TextBox.BackgroundDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.TextBox.BorderDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2" />

        <Setter Property="Foreground" Value="{DynamicResource CommonControls.Button.Foreground}" />
        <Setter Property="Background" Value="{DynamicResource CommonControls.Button.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.Button.Border}" />

        <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />

        <Style.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.Button.DefaultForeground}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.Button.DefaultBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.Button.BorderDefault}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.Button.FocusedForeground}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.Button.FocusedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.Button.BorderFocused}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.Button.HoverForeground}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.Button.HoverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.Button.BorderHover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.Button.PressedForeground}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.Button.PressedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.Button.BorderPressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource CommonControls.Button.DisabledForeground}" />
                <Setter Property="Background" Value="{DynamicResource CommonControls.Button.DisabledBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource CommonControls.Button.BorderDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Padding" Value="4,3,4,4" />

        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource Environment.DropDown.Text}" />
        <Setter Property="Background" Value="{DynamicResource Environment.DropDown.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.DropDown.Border}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="1" />
                            <ColumnDefinition Width="13" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="3"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                        </Border>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
                                Margin="{TemplateBinding Padding}"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"
                                TextOptions.TextFormattingMode="Display">
                        </ContentPresenter>
                        <TextBox x:Name="PART_EditableTextBox"
                                 Margin="{TemplateBinding Padding}" Style="{x:Null}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 Focusable="True" Visibility="Hidden" Background="Transparent"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 TextBlock.Foreground="{TemplateBinding Foreground}"
                                 TextOptions.TextFormattingMode="Display">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <Border x:Name="Separator" Grid.Column="1" Width="1" Margin="0,1" Background="Transparent" />
                        <ToggleButton x:Name="ToggleButton" Grid.Column="2" Margin="0,1,1,1"
                                      Focusable="False" ClickMode="Press" Background="Transparent"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border Background="{TemplateBinding Background}">
                                        <Path Margin="0,1,0,0" Fill="{TemplateBinding Foreground}"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M0,0 L3,3 L6,0 Z" />
                                    </Border>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Popup x:Name="Popup" Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" Focusable="False"
                               HorizontalOffset="1" VerticalOffset="-1">
                            <Border ClipToBounds="True" Padding="0,0,5,5">
                                <Grid x:Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" 
                                            BorderThickness="1" Margin="0,0,2,0"
                                            Background="{DynamicResource Environment.DropDown.PopupBackground}"
                                            BorderBrush="{DynamicResource Environment.DropDown.PopupBorder}">
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.5" Direction="300" />
                                        </Border.Effect>
                                    </Border>
                                    <ScrollViewer SnapsToDevicePixels="True" Margin="3,1,5,1">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Separator" Property="Background" Value="{DynamicResource Environment.DropDown.ButtonMouseOverSeparator}" />
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource Environment.DropDown.MouseOverGlyph}" />
                            <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource Environment.DropDown.ButtonMouseOverBackground}" />
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="Separator" Property="Background" Value="{DynamicResource Environment.DropDown.ButtonMouseDownSeparator}" />
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource Environment.DropDown.MouseDownGlyph}" />
                            <Setter TargetName="ToggleButton" Property="Background" Value="{DynamicResource Environment.DropDown.ButtonMouseDownBackground}" />
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{DynamicResource Environment.DropDown.DisabledGlyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.DropDown.MouseOverText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.DropDown.MouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.DropDown.MouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.DropDown.MouseDownText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.DropDown.MouseDownBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.DropDown.MouseDownBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Environment.DropDown.DisabledText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.DropDown.DisabledBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.DropDown.DisabledBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBoxItem">
        <Setter Property="Template" Value="{StaticResource ComboBoxItemTemplate}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="3,0" />

        <Setter Property="Foreground" Value="{DynamicResource Environment.ComboBox.ItemText}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Margin="{TemplateBinding Margin}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter TextBlock.Foreground="{TemplateBinding Foreground}"
                                          TextOptions.TextFormattingMode="Display" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.ComboBox.ItemMouseOverText}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ComboBox.ItemMouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ComboBox.ItemMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Environment.ComboBox.ItemTextInactive}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->
    
    <!--#region ToolBar-->

    <Style TargetType="ToolBarTray">
        <Setter Property="Background" Value="{DynamicResource Environment.CommandShelf.BackgroundGradient}" />
        <Style.Triggers>
            <Trigger Property="IsLocked" Value="True">
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.Gradient}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ToolBar">
        <Style.Resources>
            <Style x:Key="ToolBarThumbStyle" TargetType="Thumb">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Cursor" Value="SizeAll" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.DragHandle}" />
                <Setter Property="Template" Value="{StaticResource ToolBarDragHandle}" />
            </Style>
            <Style x:Key="ToolBarOverflowButtonStyle" TargetType="ToggleButton">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="VerticalContentAlignment" Value="Bottom" />
                <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.OptionsGlyph}" />
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.OptionsBackground}" />
                <Setter Property="BorderThickness" Value="0" />

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.OptionsMouseOverBackground}" />
                        <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.OptionsMouseOverGlyph}" />
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.OptionsMouseDownBackground}" />
                        <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.OptionsMouseDownGlyph}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.Gradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.ToolBarBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="9,1,-9,1" />
        <Setter Property="Padding" Value="1,0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolBar">
                    <DockPanel Background="{TemplateBinding BorderBrush}">
                        <ToggleButton x:Name="OverflowToggle" DockPanel.Dock="Right" ClickMode="Press"
                                IsEnabled="{TemplateBinding HasOverflowItems}"
                                Style="{StaticResource ToolBarOverflowButtonStyle}"
                                IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <Path Margin="1,3" VerticalAlignment="Bottom"
                                  Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}}"
                                  Data="M0,0 H6 V1 H0 Z M0,3 L3,6 L6,3 Z" />
                        </ToggleButton>
                        <Popup PlacementTarget="{Binding ElementName=OverflowToggle}"
                               AllowsTransparency="True" Placement="Bottom"
                               StaysOpen="False" Focusable="False"
                               HorizontalOffset="-6" VerticalOffset="1"
                               IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border ClipToBounds="True" Padding="0,0,5,5">
                                <Border BorderThickness="1" Margin="0,0,2,0"
                                        Background="{DynamicResource Environment.CommandBar.MenuBackgroundGradient}"
                                        BorderBrush="{DynamicResource Environment.CommandBar.MenuBorder}">
                                    <Border.Effect>
                                        <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.5" Direction="300" />
                                    </Border.Effect>
                                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                            Margin="2" WrapWidth="200"
                                            Focusable="True" FocusVisualStyle="{x:Null}"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </Border>
                            </Border>
                        </Popup>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <DockPanel>
                                <Thumb x:Name="ToolBarThumb" Style="{StaticResource ToolBarThumbStyle}" Width="5" Margin="2,3" />
                                <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="True" Margin="{TemplateBinding Padding}" />
                            </DockPanel>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasOverflowItems" Value="False">
                            <Setter TargetName="OverflowToggle" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsOverflowOpen" Value="True">
                            <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="False" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="True">
                            <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="ToolBarTray.IsLocked" Value="True">
                <Setter Property="Margin" Value="0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Padding" Value="5,2" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />
        <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextActive}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="3" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextHover}" />
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextMouseDown}" />
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MouseDownBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.MouseDownBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="ToggleButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />
        <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextActive}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="3" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextHover}" />
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextMouseDown}" />
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MouseDownBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.MouseDownBorder}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.Selected}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.SelectedBorder}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.HoverOverSelectedIcon}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.HoverOverSelectedIconBorder}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    
    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Margin" Value="3,2" />
        <Setter Property="Width" Value="2" />

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1,0,0,0" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.ToolBarSeparator}" />
        <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.ToolBarSeparatorHighlight}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->
    
    <!--#region Menu-->

    <Style TargetType="Menu">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />

        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource Environment.CommandShelf.HighlightGradient}" />
        <Setter Property="Padding" Value="0,2" />
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <StackPanel IsItemsHost="True" Orientation="Horizontal"
                                    Margin="{TemplateBinding Padding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator">
        <Setter Property="Margin" Value="3,1,2,1" />
        <Setter Property="Height" Value="1" />

        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.MenuSeparator}" />
        <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MenuSeparator}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="MenuPopupCheckBox" />
                            <ColumnDefinition SharedSizeGroup="MenuPopupIcon" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Grid.ColumnSpan="2" MinWidth="27" />
                        <Border Grid.Column="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--header level item with no children-->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" BorderThickness="1">
            <ContentPresenter x:Name="Presenter" Margin="9,0,9,1"
                    ContentSource="Header" RecognizesAccessKey="True"
                    TextBlock.Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                    TextOptions.TextFormattingMode="Display" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextHover}" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBar.MouseOverBackground}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="MenuItem">
        <Grid>
            <Border x:Name="Border" BorderThickness="1">
                <ContentPresenter x:Name="Presenter" Margin="9,0,9,1"
                        ContentSource="Header" RecognizesAccessKey="True"
                        TextBlock.Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                        TextOptions.TextFormattingMode="Display" />
            </Border>
            <Popup x:Name="Popup" Placement="Relative"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True" Focusable="False" 
                    Grid.IsSharedSizeScope="True"
                    PopupAnimation="None">
                <StackPanel Orientation="Vertical">
                    <DockPanel Panel.ZIndex="1" LastChildFill="False">
                        <Border DockPanel.Dock="Left" SnapsToDevicePixels="True" 
                                BorderThickness="1,1,1,0"
                                BorderBrush="{DynamicResource Environment.CommandBar.MenuBorder}"
                                Background="{DynamicResource Environment.CommandBar.MenuBackgroundGradient}">
                            <ContentPresenter Margin="9,0,9,2"
                                    ContentSource="Header" RecognizesAccessKey="True"
                                    TextBlock.Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                                    TextOptions.TextFormattingMode="Display" />
                        </Border>
                    </DockPanel>
                    <Border ClipToBounds="True" Margin="0,-1,0,0">
                        <Border x:Name="SubmenuBorder"
                                Panel.ZIndex="0" Margin="0,0,3,3"
                                SnapsToDevicePixels="True"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource Environment.CommandBar.MenuBorder}"
                                Background="{DynamicResource Environment.CommandBar.MenuBackgroundGradient}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="MenuPopupCheckBox" />
                                    <ColumnDefinition SharedSizeGroup="MenuPopupIcon" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Margin="0,1,0,0" Grid.ColumnSpan="2"
                                        VerticalAlignment="Stretch" MinWidth="27"
                                        Background="{DynamicResource Environment.CommandBar.MenuIconBackground}" />
                                <StackPanel Grid.ColumnSpan="3" Margin="2" IsItemsHost="True" 
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.5" Direction="300" />
                            </Border.Effect>
                        </Border>
                    </Border>
                </StackPanel>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextHover}" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBar.MouseOverBackground}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--submenu item with no children-->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" Background="Transparent"
                BorderThickness="1" SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuPopupCheckBox" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuPopupIcon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition SharedSizeGroup="MenuPopupShortcut" />
                    <ColumnDefinition Width="18" />
                </Grid.ColumnDefinitions>
                <Border x:Name="CheckBox" SnapsToDevicePixels="True" Visibility="Collapsed"
                        Width="18" Height="18" BorderThickness="2" Margin="-3,0,0,0"
                        Background="{DynamicResource Environment.CommandBar.SelectedIcon}"
                        BorderBrush="{DynamicResource Environment.CommandBar.CheckBox}">
                    <ContentControl x:Name="CheckIcon" HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Foreground="{DynamicResource Environment.CommandBar.CheckBox}" />
                </Border>
                <Border x:Name="IconBox" SnapsToDevicePixels="True"
                        Grid.Column="1" Visibility="Visible">
                    <ContentPresenter x:Name="Icon" ContentSource="Icon"
                            HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Border>
                <ContentPresenter x:Name="Presenter" Grid.Column="2"
                        Margin="6,3,36,2"
                        ContentSource="Header" RecognizesAccessKey="True"
                        TextBlock.Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                        TextOptions.TextFormattingMode="Display" />
                <TextBlock x:Name="InputGestureText"
                        Grid.Column="3" Margin="0,3,0,2"
                        Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                        Text="{TemplateBinding InputGestureText}"
                        TextOptions.TextFormattingMode="Display" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="CheckBox" Property="Visibility" Value="Hidden" />
                <Setter TargetName="IconBox" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckBox" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="CheckBox" Property="Background" Value="{DynamicResource Environment.CommandBar.HoverOverSelectedIcon}" />
                <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.CheckBoxMouseOver}" />
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverForeground}" />
                <Setter TargetName="InputGestureText" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverForeground}" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverBackground}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="CheckBox" Property="Background" Value="{DynamicResource Environment.CommandBar.SelectedIconDisabled}" />
                <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.CheckBoxDisabled}" />
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
                <Setter TargetName="InputGestureText" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
        <Border x:Name="Border" Background="Transparent"
                BorderThickness="1" SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuPopupCheckBox" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuPopupIcon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition SharedSizeGroup="MenuPopupShortcut" />
                    <ColumnDefinition Width="18" />
                </Grid.ColumnDefinitions>
                <Border x:Name="CheckBox" SnapsToDevicePixels="True" Visibility="Collapsed"
                        Width="18" Height="18" BorderThickness="2" Margin="-3,0,0,0"
                        Background="{DynamicResource Environment.CommandBar.SelectedIcon}"
                        BorderBrush="{DynamicResource Environment.CommandBar.CheckBox}">
                    <ContentControl x:Name="CheckIcon" HorizontalAlignment="Center" VerticalAlignment="Center"
                                    Foreground="{DynamicResource Environment.CommandBar.CheckBox}" />
                </Border>
                <Border x:Name="IconBox" SnapsToDevicePixels="True"
                        Grid.Column="1" Visibility="Visible">
                    <ContentPresenter x:Name="Icon" ContentSource="Icon"
                            HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Border>
                <ContentPresenter x:Name="Presenter" Grid.Column="2"
                        Margin="6,3,36,2"
                        ContentSource="Header" RecognizesAccessKey="True"
                        TextBlock.Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                        TextOptions.TextFormattingMode="Display" />
                <TextBlock x:Name="InputGestureText"
                        Grid.Column="3" Margin="0,3,0,2"
                        Foreground="{DynamicResource Environment.CommandBar.TextActive}"
                        Text="{TemplateBinding InputGestureText}"
                        TextOptions.TextFormattingMode="Display" />
                <Path x:Name="Indicator" Grid.Column="4"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Fill="{DynamicResource Environment.CommandBar.MenuSubmenuGlyph}"
                        Data="M0,0 L0,7 L4,3.5 Z" />
                <Popup x:Name="Popup" Placement="Right"
                        IsOpen="{TemplateBinding IsSubmenuOpen}"
                        VerticalOffset="-1" HorizontalOffset="1"
                        AllowsTransparency="True" Grid.IsSharedSizeScope="True"
                        Focusable="False" PopupAnimation="None">
                    <Border x:Name="SubmenuBorder"
                            SnapsToDevicePixels="True"
                            BorderThickness="1" Margin="0,0,3,3"
                            BorderBrush="{DynamicResource Environment.CommandBar.MenuBorder}"
                            Background="{DynamicResource Environment.CommandBar.MenuBackgroundGradient}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition SharedSizeGroup="MenuPopupCheckBox" />
                                <ColumnDefinition SharedSizeGroup="MenuPopupIcon" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.ColumnSpan="2" MinWidth="27"
                                    VerticalAlignment="Stretch"
                                    Background="{DynamicResource Environment.CommandBar.MenuIconBackground}" />
                            <StackPanel Grid.ColumnSpan="3" Margin="2" IsItemsHost="True" 
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Grid>
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.5" Direction="300" />
                        </Border.Effect>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="CheckBox" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckBox" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="CheckBox" Property="Background" Value="{DynamicResource Environment.CommandBar.HoverOverSelectedIcon}" />
                <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.CheckBoxMouseOver}" />
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverForeground}" />
                <Setter TargetName="InputGestureText" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverForeground}" />
                <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource Environment.CommandBar.MenuMouseOverSubmenuGlyph}" />
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverBackground}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.MenuItemMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="CheckBox" Property="Background" Value="{DynamicResource Environment.CommandBar.SelectedIconDisabled}" />
                <Setter TargetName="CheckBox" Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.CheckBoxDisabled}" />
                <Setter TargetName="Presenter" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
                <Setter TargetName="InputGestureText" Property="TextBlock.Foreground" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
                <Setter TargetName="Indicator" Property="Fill" Value="{DynamicResource Environment.CommandBar.TextInactive}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ContextMenu">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{DynamicResource Environment.CommandBar.MenuBackgroundGradient}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.CommandBar.MenuBorder}" />
        <Setter Property="BorderThickness" Value="1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border ClipToBounds="True" Grid.IsSharedSizeScope="True">
                        <Border x:Name="Border" Panel.ZIndex="0" Margin="0,0,3,3"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition SharedSizeGroup="MenuPopupCheckBox" />
                                    <ColumnDefinition SharedSizeGroup="MenuPopupIcon" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.ColumnSpan="2" MinWidth="27"
                                        VerticalAlignment="Stretch"
                                        Background="{DynamicResource DynamicResource Environment.CommandBar.MenuIconBackground}" />
                                <StackPanel Grid.ColumnSpan="3" Margin="2" IsItemsHost="True" 
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Grid>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="5" ShadowDepth="2" Opacity="0.5" Direction="300" />
                            </Border.Effect>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="False">
                            <Setter TargetName="Border" Property="Margin" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region ScrollViewer-->

    <Style x:Key="ScrollBarLineButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Focusable" Value="False" />

        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ArrowBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ArrowGlyph}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border x:Name="Border"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ArrowMouseOverBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ArrowGlyphMouseOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ArrowPressedBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ArrowGlyphPressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ArrowDisabledBackground}" />
                <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ArrowGlyphDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />

        <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ThumbGlyph}" />
        <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ThumbBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.ScrollBar.ThumbBorder}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ThumbGlyphMouseOverBorder}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ThumbMouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ScrollBar.ThumbMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsDragging" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ThumbGlyphPressedBorder}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ThumbPressedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ScrollBar.ThumbPressedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Environment.ScrollBar.ThumbDisabled}" />
                <Setter Property="Background" Value="{DynamicResource Environment.ScrollBar.ThumbDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Environment.ScrollBar.ThumbDisabled}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="ScrollBar">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" Background="{DynamicResource Environment.ScrollBar.Background}" />
            <RepeatButton Grid.Row="0" Height="17"
                    Style="{StaticResource ScrollBarLineButton}"
                    Command="ScrollBar.LineUpCommand">
                <ContentControl Template="{StaticResource ScrollArrowUpGlyph}"
                                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RepeatButton}}" />
            </RepeatButton>
            <Track x:Name="PART_Track" Grid.Row="1"
                    IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="4,0" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Height="17"
                    Style="{StaticResource ScrollBarLineButton}"
                    Command="ScrollBar.LineDownCommand">
                <ContentControl Template="{StaticResource ScrollArrowDownGlyph}"
                                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RepeatButton}}" />
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="ScrollBar">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" Background="{DynamicResource Environment.ScrollBar.Background}" />
            <RepeatButton Grid.Column="0" Width="17"
                        Style="{StaticResource ScrollBarLineButton}"
                        Command="ScrollBar.LineLeftCommand">
                <ContentControl Template="{StaticResource ScrollArrowLeftGlyph}"
                                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RepeatButton}}" />
            </RepeatButton>
            <Track x:Name="PART_Track" Grid.Column="1"
                    IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,4" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Width="17"
                        Style="{StaticResource ScrollBarLineButton}"
                        Command="ScrollBar.LineRightCommand">
                <ContentControl Template="{StaticResource ScrollArrowRightGlyph}"
                                Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=RepeatButton}}" />
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style TargetType="ScrollBar">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Height" Value="17" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="17" />
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ScrollViewer">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource Environment.ScrollBar.Border}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                    Margin="{TemplateBinding Padding}" />
                            <Border Grid.Column="1" Grid.RowSpan="2" Background="{DynamicResource Environment.ScrollBar.Background}" />
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                    Orientation="Vertical" Grid.Column="1"
                                    Value="{TemplateBinding VerticalOffset}"
                                    Maximum="{TemplateBinding ScrollableHeight}"
                                    ViewportSize="{TemplateBinding ViewportHeight}"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                    Orientation="Horizontal" Grid.Row="1"
                                    Value="{TemplateBinding HorizontalOffset}"
                                    Maximum="{TemplateBinding ScrollableWidth}"
                                    ViewportSize="{TemplateBinding ViewportWidth}"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Custom Controls-->

    <Style TargetType="c:SearchControl">
        <Style.Resources>
            <Style x:Key="ActionButtonStyle" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template" Value="{StaticResource ButtonBaseTemplate}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource SearchControl.ActionButtonMouseOverGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource SearchControl.ActionButtonMouseOver}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource SearchControl.ActionButtonMouseOverBorder}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource SearchControl.ActionButtonMouseDownGlyph}" />
                        <Setter Property="Background" Value="{DynamicResource SearchControl.ActionButtonMouseDown}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource SearchControl.ActionButtonMouseDownBorder}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource SearchControl.ActionButtonDisabledGlyph}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>

        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SelectionBrush" Value="{DynamicResource SearchControl.Selection}" />
        <Setter Property="Padding" Value="2,1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:SearchControl">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <DockPanel>
                            <Button x:Name="PART_AcceptButton" DockPanel.Dock="Right"
                                    Style="{TemplateBinding AcceptButtonStyle}">
                                <ContentControl Template="{StaticResource SearchAcceptGlyph}" Margin="1"
                                        Foreground="{Binding Foreground, ElementName=PART_AcceptButton}" />
                            </Button>
                            <Button x:Name="PART_CancelButton" DockPanel.Dock="Right"
                                    Style="{TemplateBinding CancelButtonStyle}">
                                <ContentControl Template="{StaticResource SearchClearGlyph}" Margin="1"
                                        Foreground="{Binding Foreground, ElementName=PART_CancelButton}" />
                            </Button>
                            <Grid>
                                <ScrollViewer Panel.ZIndex="0" x:Name="PART_ContentHost" />
                                <TextBox x:Name="watermark" Panel.ZIndex="1" IsHitTestVisible="False"
                                         Background="Transparent" BorderThickness="0" Visibility="Collapsed"
                                         SnapsToDevicePixels="{Binding SnapsToDevicePixels, RelativeSource={RelativeSource AncestorType=c:SearchControl}}"
                                         TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource AncestorType=c:SearchControl}}"
                                         Padding="{Binding Padding, RelativeSource={RelativeSource AncestorType=c:SearchControl}}"
                                         Text="{Binding WatermarkText, RelativeSource={RelativeSource AncestorType=c:SearchControl}}" />
                            </Grid>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSearchActive" Value="True">
                            <Setter TargetName="PART_AcceptButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="PART_CancelButton" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSearchActive" Value="False">
                            <Setter TargetName="PART_AcceptButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_CancelButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="watermark" Property="Foreground" Value="{DynamicResource SearchControl.UnfocusedWatermarkText}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="watermark" Property="Foreground" Value="{DynamicResource SearchControl.MouseOverWatermarkText}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocusWithin" Value="False" />
                                <Condition Property="IsSearchActive" Value="False" />
                                <Condition Property="HasText" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="watermark" Property="Visibility" Value="Visible" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="AcceptButtonStyle">
            <Setter.Value>
                <Style TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
                    <Setter Property="Foreground" Value="{DynamicResource SearchControl.SearchGlyph}" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=c:SearchControl}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource SearchControl.MouseOverSearchGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType=c:SearchControl}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource SearchControl.FocusedSearchGlyph}" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="CancelButtonStyle">
            <Setter.Value>
                <Style TargetType="Button" BasedOn="{StaticResource ActionButtonStyle}">
                    <Setter Property="Foreground" Value="{DynamicResource SearchControl.ClearGlyph}" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=c:SearchControl}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource SearchControl.MouseOverClearGlyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource AncestorType=c:SearchControl}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource SearchControl.FocusedClearGlyph}" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" />
                    <Condition Property="IsMouseOver" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SearchControl.UnfocusedForeground}" />
                <Setter Property="Background" Value="{DynamicResource SearchControl.UnfocusedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SearchControl.UnfocusedBorder}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsFocused" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource SearchControl.MouseOverForeground}" />
                <Setter Property="Background" Value="{DynamicResource SearchControl.MouseOverBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SearchControl.MouseOverBorder}" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource SearchControl.FocusedForeground}" />
                <Setter Property="Background" Value="{DynamicResource SearchControl.FocusedBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SearchControl.FocusedBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource SearchControl.DisabledForeground}" />
                <Setter Property="Background" Value="{DynamicResource SearchControl.DisabledBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SearchControl.DisabledBorder}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

</ResourceDictionary>