<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Studio.Controls"
                    xmlns:u="clr-namespace:Studio.Utilities"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Style TargetType="c:DockContainer">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DataTemplate.Resources>
                        <RotateTransform x:Key="transform" Angle="90" />
                    </DataTemplate.Resources>
                    <ToggleButton Name="btn" Content="{Binding}"
                            TextOptions.TextFormattingMode="Display"
                            IsChecked="{Binding IsSelected,RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                            DockPanel.Dock="{Binding (DockPanel.Dock), RelativeSource={RelativeSource AncestorType=ItemsControl}}" />
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=btn, Path=(DockPanel.Dock)}" Value="Right">
                            <Setter TargetName="btn" Property="LayoutTransform" Value="{StaticResource transform}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=btn, Path=(DockPanel.Dock)}" Value="Left">
                            <Setter TargetName="btn" Property="LayoutTransform" Value="{StaticResource transform}" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:DockContainer">
                    <ControlTemplate.Resources>
                        <u:DockToOrientationConverter x:Key="orientationConverter" />
                        <u:ThicknessConverter x:Key="thicknessConverter" />
                        <Style x:Key="containerStyle" TargetType="ListBox">
                            <Setter Property="Margin" Value="-1" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="SelectedItem" Value="{Binding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="SelectedValue" Value="{Binding SelectedValue, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="SelectedValuePath" Value="{Binding SelectedValuePath, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="ItemTemplate" Value="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="ItemTemplateSelector" Value="{Binding ItemTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="ItemsPanel">
                                <Setter.Value>
                                    <ItemsPanelTemplate>
                                        <StackPanel IsItemsHost="True" Orientation="{Binding Path=(DockPanel.Dock), RelativeSource={RelativeSource AncestorType=ItemsControl}, Converter={StaticResource orientationConverter}}" />
                                    </ItemsPanelTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <DockPanel LastChildFill="True" 
                               Background="{TemplateBinding Background}">
                        <ListBox x:Name="TopDock" DockPanel.Dock="Top"
                                 ItemsSource="{TemplateBinding TopItemsSource}"
                                 Style="{StaticResource containerStyle}"
                                 ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                 ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}">
                            <ListBox.Padding>
                                <MultiBinding Converter="{StaticResource thicknessConverter}">
                                    <Binding ElementName="LeftDock" Path="ActualWidth" />
                                    <Binding />
                                    <Binding ElementName="RightDock" Path="ActualWidth" />
                                    <Binding />
                                </MultiBinding>
                            </ListBox.Padding>
                        </ListBox>
                        <ListBox x:Name="BottomDock" DockPanel.Dock="Bottom"
                                 ItemsSource="{TemplateBinding BottomItemsSource}"
                                 Style="{StaticResource containerStyle}"
                                 ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                 ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}">
                            <ListBox.Padding>
                                <MultiBinding Converter="{StaticResource thicknessConverter}">
                                    <Binding ElementName="LeftDock" Path="ActualWidth" />
                                    <Binding />
                                    <Binding ElementName="RightDock" Path="ActualWidth" />
                                    <Binding />
                                </MultiBinding>
                            </ListBox.Padding>
                        </ListBox>
                        <ListBox x:Name="LeftDock" DockPanel.Dock="Left"
                                 ItemsSource="{TemplateBinding LeftItemsSource}"
                                 Style="{StaticResource containerStyle}"
                                 ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                 ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}" />
                        <ListBox x:Name="RightDock" DockPanel.Dock="Right"
                                 ItemsSource="{TemplateBinding RightItemsSource}"
                                 Style="{StaticResource containerStyle}"
                                 ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                 ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}" />
                        <Grid>
                            <Grid Panel.ZIndex="0">
                                <ContentPresenter x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}" />
                            </Grid>
                            <Grid x:Name="popover" Panel.ZIndex="1" Visibility="Collapsed">
                                <ContentPresenter Content="{TemplateBinding SelectedItem}"
                                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                        ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}" />
                            </Grid>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasSelection" Value="True">
                            <Setter TargetName="popover" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c:DockTargetPanel">
        <Style.Resources>
            <u:VisibilityConverter x:Key="visConverter" FalseValue="Hidden" />
        </Style.Resources>
        <Setter Property="HighlightStyle">
            <Setter.Value>
                <Style TargetType="Path">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="UseLayoutRounding" Value="True" />
                    <Setter Property="Fill" Value="{DynamicResource Environment.Highlight}" />
                    <Setter Property="Stroke" Value="{DynamicResource Environment.ActiveBorder}" />
                    <Setter Property="StrokeThickness" Value="10" />
                    <Setter Property="Opacity" Value="0.3" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:DockTargetPanel">
                    <Canvas Grid.IsSharedSizeScope="True"
                            Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                            Height="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}">
                        <DockPanel Name="outerDock" LastChildFill="False"
                                   Canvas.Left="{Binding DockArea.X, RelativeSource={RelativeSource TemplatedParent}}"
                                   Canvas.Top="{Binding DockArea.Y, RelativeSource={RelativeSource TemplatedParent}}"
                                   Width="{Binding DockArea.Width, RelativeSource={RelativeSource TemplatedParent}}"
                                   Height="{Binding DockArea.Height, RelativeSource={RelativeSource TemplatedParent}}">
                            <c:DockTargetButton TargetDock="DockLeft" DockPanel.Dock="Left"
                                                TargetHost="{Binding DockHost, RelativeSource={RelativeSource TemplatedParent}}" />
                            <c:DockTargetButton TargetDock="DockRight" DockPanel.Dock="Right"
                                                TargetHost="{Binding DockHost, RelativeSource={RelativeSource TemplatedParent}}"  />
                            <c:DockTargetButton TargetDock="DockTop" DockPanel.Dock="Top"
                                                TargetHost="{Binding DockHost, RelativeSource={RelativeSource TemplatedParent}}"  />
                            <c:DockTargetButton TargetDock="DockBottom" DockPanel.Dock="Bottom"
                                                TargetHost="{Binding DockHost, RelativeSource={RelativeSource TemplatedParent}}"  />
                        </DockPanel>
                        <Grid Name="targetPanel" ClipToBounds="False"
                              Canvas.Left="{Binding TargetArea.X, RelativeSource={RelativeSource TemplatedParent}}"
                              Canvas.Top="{Binding TargetArea.Y, RelativeSource={RelativeSource TemplatedParent}}"
                              Width="{Binding TargetArea.Width, RelativeSource={RelativeSource TemplatedParent}}"
                              Height="{Binding TargetArea.Height, RelativeSource={RelativeSource TemplatedParent}}">
                            <Grid x:Name="innerDock" HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="c1" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="c2" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="c3" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" SharedSizeGroup="r1" />
                                    <RowDefinition Height="Auto" SharedSizeGroup="r2" />
                                    <RowDefinition Height="Auto" SharedSizeGroup="r3" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <c:DockTargetButton TargetDock="DockLeft" Grid.Column="0" Grid.Row="2"
                                                    TargetHost="{Binding TargetHost, RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:DockTargetButton TargetDock="DockRight" Grid.Column="4" Grid.Row="2"
                                                    TargetHost="{Binding TargetHost, RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:DockTargetButton TargetDock="DockTop" Grid.Column="2" Grid.Row="0"
                                                    TargetHost="{Binding TargetHost, RelativeSource={RelativeSource TemplatedParent}}" />
                                <c:DockTargetButton TargetDock="DockBottom" Grid.Column="2" Grid.Row="4"
                                                    TargetHost="{Binding TargetHost, RelativeSource={RelativeSource TemplatedParent}}"  />
                            </Grid>
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="c1" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="c2" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="c3" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" SharedSizeGroup="r1" />
                                    <RowDefinition Height="Auto" SharedSizeGroup="r2" />
                                    <RowDefinition Height="Auto" SharedSizeGroup="r3" />
                                </Grid.RowDefinitions>
                                <c:DockTargetButton TargetDock="SplitLeft" Grid.Column="0" Grid.Row="1"
                                                    TargetHost="{Binding TargetHost, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="{Binding CanSplitLeft, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visConverter}}" />
                                <c:DockTargetButton TargetDock="SplitTop" Grid.Column="1" Grid.Row="0"
                                                    TargetHost="{Binding TargetHost, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="{Binding CanSplitTop, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visConverter}}" />
                                <c:DockTargetButton TargetDock="SplitRight" Grid.Column="2" Grid.Row="1"
                                                    TargetHost="{Binding TargetHost, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="{Binding CanSplitRight, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visConverter}}" />
                                <c:DockTargetButton TargetDock="SplitBottom" Grid.Column="1" Grid.Row="2"
                                                    TargetHost="{Binding TargetHost, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="{Binding CanSplitBottom, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visConverter}}" />
                                <c:DockTargetButton TargetDock="Center" Grid.Column="1" Grid.Row="1"
                                                    TargetHost="{Binding TargetHost, RelativeSource={RelativeSource TemplatedParent}}"
                                                    Visibility="{Binding CanDropCenter, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource visConverter}}" />
                            </Grid>
                        </Grid>
                        <Path Style="{Binding HighlightStyle, RelativeSource={RelativeSource TemplatedParent}}"
                              Canvas.Left="{Binding DockArea.X, RelativeSource={RelativeSource TemplatedParent}}"
                              Canvas.Top="{Binding DockArea.Y, RelativeSource={RelativeSource TemplatedParent}}"
                              Data="{Binding HighlightPath, RelativeSource={RelativeSource TemplatedParent}}"
                              Clip="{Binding HighlightPath, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Canvas>

                    <ControlTemplate.Triggers>
                        <Trigger Property="DockArea" Value="{x:Static Rect.Empty}">
                            <Setter TargetName="outerDock" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="TargetArea" Value="{x:Static Rect.Empty}">
                            <Setter TargetName="targetPanel" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="CanDockOuter" Value="False">
                            <Setter TargetName="outerDock" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="CanDockTarget" Value="False">
                            <Setter TargetName="innerDock" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c:SplitPanelSplitter">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ShowsPreview" Value="True" />
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style TargetType="Control">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle Fill="#80000000" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c:SplitPanelSplitter">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c:DocumentContainer" BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <c:SplitPanel Orientation="{Binding Orientation, RelativeSource={RelativeSource AncestorType=c:DocumentContainer}}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>